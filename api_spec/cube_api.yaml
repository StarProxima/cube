openapi: 3.0.2
info:
  title: cube
  version: 0.1.0
paths:
  /api/auth/login:
    post:
      tags:
        - auth
      summary: Login
      description: |-
        API авторизации клиента.

        Для авторизации клиентов в мобильном приложении и telegram-боте используйте
        уникальный идентификатор и ключ клиентского приложения.
      operationId: login_api_auth_login_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_api_auth_login_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/auth/logout:
    post:
      tags:
        - auth
      summary: Logout
      description: API завершения сеанса.
      operationId: logout_api_auth_logout_post
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /api/auth/first_password:
    post:
      tags:
        - auth
      summary: Update Me First Password
      description: API установки первого пароля.
      operationId: update_me_first_password_api_auth_first_password_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPassword'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/auth/token:
    get:
      tags:
        - auth
      summary: Update Access Token
      description: API обновления токена доступа.
      operationId: update_access_token_api_auth_token_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
      security:
        - RefreshToken: []
  /api/ping:
    get:
      tags:
        - ping
      summary: Ping
      description: API PING-PONG.
      operationId: ping_api_ping_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  /api/persons/types:
    get:
      tags:
        - person
      summary: Get Person Types
      description: API получения типов Person.
      operationId: get_person_types_api_persons_types_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Person Types Api Persons Types Get
                type: object
  /api/persons:
    get:
      tags:
        - person
      summary: Get Persons
      description: API получения Persons.
      operationId: get_persons_api_persons_get
      parameters:
        - description: Значение для поиска
          required: false
          schema:
            title: Search
            type: string
            description: Значение для поиска
          name: search
          in: query
        - description: Получить студентов
          required: false
          schema:
            title: Students
            type: boolean
            description: Получить студентов
            default: true
          name: students
          in: query
        - description: Получить преподавателей
          required: false
          schema:
            title: Teachers
            type: boolean
            description: Получить преподавателей
            default: true
          name: teachers
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Persons Api Persons Get
                type: array
                items:
                  $ref: '#/components/schemas/PersonInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/roles/permissions:
    get:
      tags:
        - role
      summary: Get Permissions
      description: API получения permissions.
      operationId: get_permissions_api_roles_permissions_get
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Permissions Api Roles Permissions Get
                type: object
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/roles:
    get:
      tags:
        - role
      summary: Get Roles
      description: API получения ролей.
      operationId: get_roles_api_roles_get
      parameters:
        - description: Название роли
          required: false
          schema:
            title: Name
            maxLength: 30
            type: string
            description: Название роли
          name: name
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Roles Api Roles Get
                type: array
                items:
                  $ref: '#/components/schemas/RoleInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - role
      summary: Create Role
      description: API создания роли.
      operationId: create_role_api_roles_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Role Api Roles Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/roles/{role_id}:
    get:
      tags:
        - role
      summary: Get Role
      description: API получения роли.
      operationId: get_role_api_roles__role_id__get
      parameters:
        - required: true
          schema:
            title: Role Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: role_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePermissionsInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    put:
      tags:
        - role
      summary: Update Role
      description: API изменения роли.
      operationId: update_role_api_roles__role_id__put
      parameters:
        - required: true
          schema:
            title: Role Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: role_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - role
      summary: Delete Role
      description: API удаления роли.
      operationId: delete_role_api_roles__role_id__delete
      parameters:
        - required: true
          schema:
            title: Role Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: role_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/other_permission:
    get:
      tags:
        - other_permission
      summary: Get Users Faculties Forbidden
      description: API получения ограничений пользователей к факультетам.
      operationId: get_users_faculties_forbidden_api_other_permission_get
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Users Faculties Forbidden Api Other Permission Get
                type: array
                items:
                  $ref: '#/components/schemas/UserFacultyForbiddenInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - other_permission
      summary: Create User Faculty Forbidden
      description: API создания ограничения пользователя к факультету.
      operationId: create_user_faculty_forbidden_api_other_permission_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFacultyForbiddenCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/other_permission/{faculty_id}:
    put:
      tags:
        - other_permission
      summary: Update Users Faculties Forbidden
      description: API создания ограничения пользователя к факультету.
      operationId: update_users_faculties_forbidden_api_other_permission__faculty_id__put
      parameters:
        - required: true
          schema:
            title: Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: faculty_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserFacultyForbiddenUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/users/settings:
    get:
      tags:
        - user
      summary: Get Users Settings
      description: API получения настроек для пользователей.
      operationId: get_users_settings_api_users_settings_get
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Users Settings Api Users Settings Get
                type: object
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    put:
      tags:
        - user
      summary: Update Users Settings
      description: API изменения настроек пользователей.
      operationId: update_users_settings_api_users_settings_put
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersSettings'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/users:
    get:
      tags:
        - user
      summary: Get Users
      description: API получения пользователей.
      operationId: get_users_api_users_get
      parameters:
        - description: Значение для поиска
          required: false
          schema:
            title: Search
            type: string
            description: Значение для поиска
          name: search
          in: query
        - description: Список идентификаторов ролей пользователя
          required: false
          schema:
            title: Role Ids
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов ролей пользователя
          name: role_ids
          in: query
        - description: Сортируемый столбец
          required: false
          schema:
            $ref: '#/components/schemas/UserSortBy'
            description: Сортируемый столбец
            default: login
          name: sort_by
          in: query
        - description: Параметр сортировки
          required: false
          schema:
            $ref: '#/components/schemas/SortOrder'
            description: Параметр сортировки
            default: asc
          name: sort_order
          in: query
        - required: false
          schema:
            title: Page
            minimum: 1
            type: integer
            default: 1
          name: page
          in: query
        - required: false
          schema:
            title: Size
            maximum: 50
            minimum: 5
            type: integer
            default: 10
          name: size
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_UserFullInDb_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - user
      summary: Create User
      description: API создания пользователя.
      operationId: create_user_api_users_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create User Api Users Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/users/from_person:
    post:
      tags:
        - user
      summary: Create User From Person
      description: API создания пользователя из персональных данных.
      operationId: create_user_from_person_api_users_from_person_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateFromPerson'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create User From Person Api Users From Person Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/users/{user_id}/permissions:
    get:
      tags:
        - user
      summary: Get User Permissions
      description: API получения пользовательских привилегий.
      operationId: get_user_permissions_api_users__user_id__permissions_get
      parameters:
        - required: true
          schema:
            title: User Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: user_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPermissionBase'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    put:
      tags:
        - user
      summary: Update User Permission
      description: API обновления пользовательских привилегии.
      operationId: update_user_permission_api_users__user_id__permissions_put
      parameters:
        - required: true
          schema:
            title: User Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: user_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPermissionUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - user
      summary: Create User Permission
      description: API добавления пользовательской привилегии.
      operationId: create_user_permission_api_users__user_id__permissions_post
      parameters:
        - required: true
          schema:
            title: User Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: user_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPermissionCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - user
      summary: Delete User Permission
      description: API удаления пользовательских привилегий.
      operationId: delete_user_permission_api_users__user_id__permissions_delete
      parameters:
        - required: true
          schema:
            title: User Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: user_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/users/me:
    get:
      tags:
        - user
      summary: Get User Me
      description: |-
        API получения информации о пользователе.

        *type* = 1 (Пользователь)

        *type* = 2 (Преподаватель)

        *type* = 3 (Студент)
      operationId: get_user_me_api_users_me_get
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserMeInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/users/teachers:
    get:
      tags:
        - user
      summary: Get Users Teachers
      description: API получения идентификаторов telegram и ФИО преподавателей.
      operationId: get_users_teachers_api_users_teachers_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Users Teachers Api Users Teachers Get
                type: array
                items:
                  $ref: '#/components/schemas/UserShortTelegram'
  /api/users/main_students:
    get:
      tags:
        - user
      summary: Get Users Main Students
      description: API получения идентификаторов telegram и ФИО старост.
      operationId: get_users_main_students_api_users_main_students_get
      parameters:
        - description: Список идентификаторов групп
          required: false
          schema:
            title: Groups
            type: array
            items:
              type: integer
            description: Список идентификаторов групп
          name: groups
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Users Main Students Api Users Main Students Get
                type: array
                items:
                  $ref: '#/components/schemas/UserShortTelegram'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/users/persons:
    get:
      tags:
        - user
      summary: Get Users Persons
      description: API получения идентификаторов и имен пользователей.
      operationId: get_users_persons_api_users_persons_get
      parameters:
        - description: Значение для поиска
          required: false
          schema:
            title: Search
            type: string
            description: Значение для поиска
          name: search
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Users Persons Api Users Persons Get
                type: array
                items:
                  $ref: '#/components/schemas/app__schemas__user__UserFullNameInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/users/{user_id}:
    get:
      tags:
        - user
      summary: Get User
      description: API получения пользователя.
      operationId: get_user_api_users__user_id__get
      parameters:
        - required: true
          schema:
            title: User Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: user_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFullWithStatisticInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    put:
      tags:
        - user
      summary: Update User
      description: API изменения пользователя.
      operationId: update_user_api_users__user_id__put
      parameters:
        - required: true
          schema:
            title: User Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: user_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - user
      summary: Delete User
      description: API удаления пользователя.
      operationId: delete_user_api_users__user_id__delete
      parameters:
        - required: true
          schema:
            title: User Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: user_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/users/me/password:
    post:
      tags:
        - user
      summary: Update Me Password
      description: API изменения своего пароля.
      operationId: update_me_password_api_users_me_password_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/users/{user_id}/password:
    put:
      tags:
        - user
      summary: Update User Password
      description: API изменения пароля пользователя.
      operationId: update_user_password_api_users__user_id__password_put
      parameters:
        - required: true
          schema:
            title: User Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: user_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserChangePassword'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/bot/guest:
    post:
      tags:
        - bot
      summary: Add Telegram Without Auth
      description: API добавления telegram аккаунта без авторизации.
      operationId: add_telegram_without_auth_api_bot_guest_post
      parameters:
        - required: true
          schema:
            title: Telegram Id
            type: string
          name: telegram_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/bot/user:
    post:
      tags:
        - bot
      summary: Add Telegram
      description: API добавления telegram аккаунта к пользователю.
      operationId: add_telegram_api_bot_user_post
      parameters:
        - required: true
          schema:
            title: Telegram Id
            type: string
          name: telegram_id
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - bot
      summary: Delete Telegram
      description: API удаления telegram аккаунта у пользователя.
      operationId: delete_telegram_api_bot_user_delete
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/bot/settings:
    get:
      tags:
        - bot
      summary: Get Settings
      description: API получения настроек телеграм-бота.
      operationId: get_settings_api_bot_settings_get
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Telegram'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/bot/notification_times:
    get:
      tags:
        - bot
      summary: Get Notification Times
      description: API получения времени уведомлений.
      operationId: get_notification_times_api_bot_notification_times_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Notification Times Api Bot Notification Times Get
                type: object
  /api/bot/{user_id}:
    get:
      tags:
        - bot
      summary: Get Telegram Id
      description: API получения идентификатора клиента телеграм пользователя.
      operationId: get_telegram_id_api_bot__user_id__get
      parameters:
        - required: true
          schema:
            title: User Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: user_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TelegramId'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/bot/timetable_settings:
    put:
      tags:
        - bot
      summary: Update Timetable Settings
      description: API изменения настроек уведомлений о расписании занятий.
      operationId: update_timetable_settings_api_bot_timetable_settings_put
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimetableSettingsUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/bot/session_settings:
    put:
      tags:
        - bot
      summary: Update Session Settings
      description: API изменения настроек уведомлений о расписании сессии.
      operationId: update_session_settings_api_bot_session_settings_put
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionSettingsUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/bot/attendance_settings:
    put:
      tags:
        - bot
      summary: Update Attendance Settings
      description: API изменения настроек уведомлений журнала посещаемости.
      operationId: update_attendance_settings_api_bot_attendance_settings_put
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttendanceSettingsUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/bot/weather_settings:
    put:
      tags:
        - bot
      summary: Update Weather Settings
      description: API изменения настроек уведомлений с погодой.
      operationId: update_weather_settings_api_bot_weather_settings_put
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeatherSettingsUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/bot/hourly_report_settings:
    put:
      tags:
        - bot
      summary: Update Hourly Report Settings
      description: API изменения настроек телеграм-бота.
      operationId: update_hourly_report_settings_api_bot_hourly_report_settings_put
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HourlyReportSettingsUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/bells:
    get:
      tags:
        - bell
      summary: Get Bells
      description: API получения звонков.
      operationId: get_bells_api_bells_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Bells Api Bells Get
                type: array
                items:
                  $ref: '#/components/schemas/BellInDb'
    post:
      tags:
        - bell
      summary: Create Bell
      description: API создания звонка.
      operationId: create_bell_api_bells_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BellCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Bell Api Bells Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/bells/{bell_id}:
    get:
      tags:
        - bell
      summary: Get Bell
      description: API получения данных звонка.
      operationId: get_bell_api_bells__bell_id__get
      parameters:
        - required: true
          schema:
            title: Bell Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: bell_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BellInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - bell
      summary: Update Bell
      description: API изменения звонка.
      operationId: update_bell_api_bells__bell_id__put
      parameters:
        - required: true
          schema:
            title: Bell Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: bell_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BellUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - bell
      summary: Delete Bell
      description: API удаления звонка.
      operationId: delete_bell_api_bells__bell_id__delete
      parameters:
        - required: true
          schema:
            title: Bell Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: bell_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/bells/import:
    post:
      tags:
        - bell
      summary: Import Bells
      description: API импорта звонков.
      operationId: import_bells_api_bells_import_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_import_bells_api_bells_import_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Import Bells Api Bells Import Post
                type: array
                items:
                  $ref: '#/components/schemas/BellInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/faculties:
    get:
      tags:
        - faculty
      summary: Get Faculties
      description: API получения факультетов.
      operationId: get_faculties_api_faculties_get
      parameters:
        - description: Значение для поиска
          required: false
          schema:
            title: Search
            type: string
            description: Значение для поиска
          name: search
          in: query
        - description: Название факультета
          required: false
          schema:
            title: Name
            maxLength: 60
            type: string
            description: Название факультета
          name: name
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Faculties Api Faculties Get
                type: array
                items:
                  $ref: '#/components/schemas/FacultyInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - faculty
      summary: Create Faculty
      description: API создания факультета.
      operationId: create_faculty_api_faculties_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultyCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Faculty Api Faculties Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/faculties/{faculty_id}/groups_ids:
    get:
      tags:
        - faculty
      summary: Get Faculty Groups
      description: API получения списка идентификаторов групп факультета.
      operationId: get_faculty_groups_api_faculties__faculty_id__groups_ids_get
      parameters:
        - required: true
          schema:
            title: Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: faculty_id
          in: path
        - required: false
          schema:
            title: Discipline Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: discipline_id
          in: query
        - required: false
          schema:
            title: Teacher Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: teacher_id
          in: query
        - required: false
          schema:
            title: Lesson Type Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: lesson_type_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Faculty Groups Api Faculties  Faculty Id  Groups Ids Get
                type: array
                items:
                  type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/faculties/{faculty_id}:
    get:
      tags:
        - faculty
      summary: Get Faculty
      description: API получения факультета.
      operationId: get_faculty_api_faculties__faculty_id__get
      parameters:
        - required: true
          schema:
            title: Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: faculty_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacultyInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - faculty
      summary: Update Faculty
      description: API изменения факультета.
      operationId: update_faculty_api_faculties__faculty_id__put
      parameters:
        - required: true
          schema:
            title: Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: faculty_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacultyUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - faculty
      summary: Delete Faculty
      description: API удаления факультета.
      operationId: delete_faculty_api_faculties__faculty_id__delete
      parameters:
        - required: true
          schema:
            title: Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: faculty_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/faculties/import:
    post:
      tags:
        - faculty
      summary: Import Faculties
      description: API импорта факультетов.
      operationId: import_faculties_api_faculties_import_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_import_faculties_api_faculties_import_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Import Faculties Api Faculties Import Post
                type: array
                items:
                  $ref: '#/components/schemas/FacultyInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/directions:
    get:
      tags:
        - direction
      summary: Get Directions
      description: API получения направлений.
      operationId: get_directions_api_directions_get
      parameters:
        - description: Значение для поиска
          required: false
          schema:
            title: Search
            type: string
            description: Значение для поиска
          name: search
          in: query
        - description: Идентификатор факультета
          required: false
          schema:
            title: Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор факультета
          name: faculty_id
          in: query
        - description: Название направления
          required: false
          schema:
            title: Name
            maxLength: 90
            type: string
            description: Название направления
          name: name
          in: query
        - description: Шифр
          required: false
          schema:
            title: Cipher
            maxLength: 15
            type: string
            description: Шифр
          name: cipher
          in: query
        - description: Список академических степеней
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/DegreeStudy'
            description: Список академических степеней
          name: degree_study
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Directions Api Directions Get
                type: array
                items:
                  $ref: '#/components/schemas/DirectionInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - direction
      summary: Create Direction
      description: API создания направления.
      operationId: create_direction_api_directions_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectionCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Direction Api Directions Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/directions/{direction_id}:
    get:
      tags:
        - direction
      summary: Get Direction
      description: API получения направления.
      operationId: get_direction_api_directions__direction_id__get
      parameters:
        - required: true
          schema:
            title: Direction Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: direction_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectionInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - direction
      summary: Update Direction
      description: API изменения направления.
      operationId: update_direction_api_directions__direction_id__put
      parameters:
        - required: true
          schema:
            title: Direction Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: direction_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DirectionUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - direction
      summary: Delete Direction
      description: API удаления направления.
      operationId: delete_direction_api_directions__direction_id__delete
      parameters:
        - required: true
          schema:
            title: Direction Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: direction_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/directions/import:
    post:
      tags:
        - direction
      summary: Import Directions
      description: API импорта направлений.
      operationId: import_directions_api_directions_import_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_import_directions_api_directions_import_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Import Directions Api Directions Import Post
                type: array
                items:
                  $ref: '#/components/schemas/DirectionShortInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/profiles:
    get:
      tags:
        - profile
      summary: Get Profiles
      description: API получения профилей обучения.
      operationId: get_profiles_api_profiles_get
      parameters:
        - description: Значение для поиска
          required: false
          schema:
            title: Search
            type: string
            description: Значение для поиска
          name: search
          in: query
        - description: Список идентификаторов направлений
          required: false
          schema:
            title: Directions
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов направлений
          name: directions
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Profiles Api Profiles Get
                type: array
                items:
                  $ref: '#/components/schemas/ProfileInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - profile
      summary: Create Profile
      description: API создания профиля обучения.
      operationId: create_profile_api_profiles_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Profile Api Profiles Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/profiles/{profile_id}:
    get:
      tags:
        - profile
      summary: Get Profile
      description: API получения профиля обучения.
      operationId: get_profile_api_profiles__profile_id__get
      parameters:
        - required: true
          schema:
            title: Profile Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: profile_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - profile
      summary: Update Profile
      description: API изменения профиля обучения.
      operationId: update_profile_api_profiles__profile_id__put
      parameters:
        - required: true
          schema:
            title: Profile Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: profile_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - profile
      summary: Delete Profile
      description: API удаления профиля обучения.
      operationId: delete_profile_api_profiles__profile_id__delete
      parameters:
        - required: true
          schema:
            title: Profile Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: profile_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/profiles/import:
    post:
      tags:
        - profile
      summary: Import Profiles
      description: API импорта профилей обучения.
      operationId: import_profiles_api_profiles_import_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_import_profiles_api_profiles_import_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Import Profiles Api Profiles Import Post
                type: array
                items:
                  $ref: '#/components/schemas/ProfileInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/semesters:
    get:
      tags:
        - semester
      summary: Get Semesters
      description: API получения семестров.
      operationId: get_semesters_api_semesters_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Semesters Api Semesters Get
                type: array
                items:
                  $ref: '#/components/schemas/SemesterInDb'
    post:
      tags:
        - semester
      summary: Create Semester
      description: API добавления семестра.
      operationId: create_semester_api_semesters_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemesterCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Semester Api Semesters Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/semesters/{semester_id}:
    put:
      tags:
        - semester
      summary: Update Semester
      description: API изменения семестра.
      operationId: update_semester_api_semesters__semester_id__put
      parameters:
        - required: true
          schema:
            title: Semester Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: semester_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemesterUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - semester
      summary: Delete Semester
      description: API удаления семестра.
      operationId: delete_semester_api_semesters__semester_id__delete
      parameters:
        - required: true
          schema:
            title: Semester Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: semester_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/semester_faculties/week_types:
    get:
      tags:
        - semester_faculty
      summary: Get Week Types
      description: API получения типов недель.
      operationId: get_week_types_api_semester_faculties_week_types_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Week Types Api Semester Faculties Week Types Get
                type: object
  /api/semester_faculties:
    get:
      tags:
        - semester_faculty
      summary: Semester Faculties
      description: API получения частей семестров факультета.
      operationId: semester_faculties_api_semester_faculties_get
      parameters:
        - description: Идентификатор семестра
          required: false
          schema:
            title: Semester Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор семестра
          name: semester_id
          in: query
        - description: Идентификатор факультета
          required: false
          schema:
            title: Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор факультета
          name: faculty_id
          in: query
        - description: Для текущего семестра
          required: false
          schema:
            title: Current Semester
            type: boolean
            description: Для текущего семестра
            default: false
          name: current_semester
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Semester Faculties Api Semester Faculties Get
                type: array
                items:
                  $ref: '#/components/schemas/SemesterFacultyInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - semester_faculty
      summary: Create Semester Faculty
      description: API добавления части семестра.
      operationId: create_semester_faculty_api_semester_faculties_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemesterFacultyCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Semester Faculty Api Semester Faculties Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/semester_faculties/{semester_faculty_id}:
    put:
      tags:
        - semester_faculty
      summary: Update Semester Faculty
      description: API изменения настроек недели части семестра факультета.
      operationId: update_semester_faculty_api_semester_faculties__semester_faculty_id__put
      parameters:
        - required: true
          schema:
            title: Semester Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: semester_faculty_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemesterFacultyUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - semester_faculty
      summary: Delete Semester Faculty
      description: API удаления последней части семестра факультета.
      operationId: delete_semester_faculty_api_semester_faculties__semester_faculty_id__delete
      parameters:
        - required: true
          schema:
            title: Semester Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: semester_faculty_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/semester_lessons_directions:
    get:
      tags:
        - semester_lessons_direction
      summary: Semester Lessons Directions
      description: API получения сроков семестра направления.
      operationId: semester_lessons_directions_api_semester_lessons_directions_get
      parameters:
        - description: Идентификатор семестра факультета
          required: false
          schema:
            title: Semester Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор семестра факультета
          name: semester_faculty_id
          in: query
        - description: Идентификатор семестра
          required: false
          schema:
            title: Semester Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор семестра
          name: semester_id
          in: query
        - description: Идентификатор факультета
          required: false
          schema:
            title: Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор факультета
          name: faculty_id
          in: query
        - description: Номер периода
          required: false
          schema:
            title: Part
            maximum: 4
            minimum: 1
            type: integer
            description: Номер периода
          name: part
          in: query
        - description: Список идентификаторов направлений
          required: false
          schema:
            title: Directions
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов направлений
          name: directions
          in: query
        - description: Список курсов
          required: false
          schema:
            title: Courses
            maximum: 6
            minimum: 1
            type: array
            items:
              maximum: 6
              minimum: 1
              type: integer
            description: Список курсов
          name: courses
          in: query
        - description: Список групп
          required: false
          schema:
            title: Groups
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список групп
          name: groups
          in: query
        - description: Для текущего семестра
          required: false
          schema:
            title: Current Semester
            type: boolean
            description: Для текущего семестра
            default: false
          name: current_semester
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Semester Lessons Directions Api Semester Lessons Directions Get
                type: array
                items:
                  $ref: '#/components/schemas/SemesterLessonsDirectionInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - semester_lessons_direction
      summary: Create Semester Lessons Direction
      description: API добавления сроков семестра направления.
      operationId: create_semester_lessons_direction_api_semester_lessons_directions_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemesterLessonsDirectionCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Semester Lessons Direction Api Semester Lessons Directions Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/semester_lessons_directions/{semester_lessons_direction_id}:
    put:
      tags:
        - semester_lessons_direction
      summary: Update Semester Lessons Direction
      description: API изменения сроков семестра направления.
      operationId: update_semester_lessons_direction_api_semester_lessons_directions__semester_lessons_direction_id__put
      parameters:
        - required: true
          schema:
            title: Semester Lessons Direction Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: semester_lessons_direction_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemesterLessonsDirectionUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - semester_lessons_direction
      summary: Delete Semester Lessons Direction
      description: API удаления сроков семестра направления.
      operationId: delete_semester_lessons_direction_api_semester_lessons_directions__semester_lessons_direction_id__delete
      parameters:
        - required: true
          schema:
            title: Semester Lessons Direction Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: semester_lessons_direction_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/semester_session_directions:
    get:
      tags:
        - semester_session_direction
      summary: Semester Session Directions
      description: API получения сроков сессии направления.
      operationId: semester_session_directions_api_semester_session_directions_get
      parameters:
        - description: Идентификатор семестра
          required: false
          schema:
            title: Semester Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор семестра
          name: semester_id
          in: query
        - description: Список идентификаторов направлений
          required: false
          schema:
            title: Directions
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов направлений
          name: directions
          in: query
        - description: Список курсов
          required: false
          schema:
            title: Courses
            maximum: 6
            minimum: 1
            type: array
            items:
              maximum: 6
              minimum: 1
              type: integer
            description: Список курсов
          name: courses
          in: query
        - description: Список групп
          required: false
          schema:
            title: Groups
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список групп
          name: groups
          in: query
        - description: Для текущего семестра
          required: false
          schema:
            title: Current Semester
            type: boolean
            description: Для текущего семестра
            default: false
          name: current_semester
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Semester Session Directions Api Semester Session Directions Get
                type: array
                items:
                  $ref: '#/components/schemas/SemesterSessionDirectionInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - semester_session_direction
      summary: Create Semester Session Direction
      description: API добавления сроков сессии направления.
      operationId: create_semester_session_direction_api_semester_session_directions_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemesterSessionDirectionCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Semester Session Direction Api Semester Session Directions Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/semester_session_directions/{semester_session_direction_id}:
    put:
      tags:
        - semester_session_direction
      summary: Update Semester Lessons Direction
      description: API изменения сроков сессии направления.
      operationId: update_semester_lessons_direction_api_semester_session_directions__semester_session_direction_id__put
      parameters:
        - required: true
          schema:
            title: Semester Session Direction Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: semester_session_direction_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SemesterSessionDirectionUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - semester_session_direction
      summary: Delete Semester Lessons Direction
      description: API удаления сроков сессии направления.
      operationId: delete_semester_lessons_direction_api_semester_session_directions__semester_session_direction_id__delete
      parameters:
        - required: true
          schema:
            title: Semester Session Direction Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: semester_session_direction_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/timetable_views/modes:
    get:
      tags:
        - timetable_view
      summary: Get View Modes
      description: API получения режимов просмотра расписания.
      operationId: get_view_modes_api_timetable_views_modes_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get View Modes Api Timetable Views Modes Get
                type: object
  /api/timetable_views:
    get:
      tags:
        - timetable_view
      summary: Get Timetable View
      description: API получения режимов просмотра расписания семестра по факультетам.
      operationId: get_timetable_view_api_timetable_views_get
      parameters:
        - description: Идентификатор семестра
          required: false
          schema:
            title: Semester Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор семестра
          name: semester_id
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Timetable View Api Timetable Views Get
                type: array
                items:
                  $ref: '#/components/schemas/TimetableViewInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - timetable_view
      summary: Update Timetable View
      description: API изменения режима просмотра расписания.
      operationId: update_timetable_view_api_timetable_views_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimetableViewUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/session_views:
    get:
      tags:
        - session_view
      summary: Get Session View
      description: API получения режимов просмотра расписания сессии по факультетам.
      operationId: get_session_view_api_session_views_get
      parameters:
        - description: Идентификатор семестра
          required: false
          schema:
            title: Semester Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор семестра
          name: semester_id
          in: query
        - description: Идентификатор факультета
          required: false
          schema:
            title: Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор факультета
          name: faculty_id
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Session View Api Session Views Get
                type: array
                items:
                  $ref: '#/components/schemas/SessionViewInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - session_view
      summary: Update Session View
      description: API изменения режима просмотра расписания сессии факультета.
      operationId: update_session_view_api_session_views_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionViewUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/groups:
    get:
      tags:
        - group
      summary: Get Groups
      description: API получения групп.
      operationId: get_groups_api_groups_get
      parameters:
        - description: Значение для поиска
          required: false
          schema:
            title: Search
            type: string
            description: Значение для поиска
          name: search
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Groups Api Groups Get
                type: array
                items:
                  $ref: '#/components/schemas/GroupInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - group
      summary: Create Group
      description: API добавления группы.
      operationId: create_group_api_groups_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Group Api Groups Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/groups/{group_id}/disciplines_ids:
    get:
      tags:
        - group
      summary: Get Group Disciplines
      description: API получения списка идентификаторов дисциплин группы.
      operationId: get_group_disciplines_api_groups__group_id__disciplines_ids_get
      parameters:
        - required: true
          schema:
            title: Group Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: group_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Group Disciplines Api Groups  Group Id  Disciplines Ids Get
                type: array
                items:
                  type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/groups/{group_id}/disciplines/{discipline_id}/types_ids:
    get:
      tags:
        - group
      summary: Get Group Discipline Types
      description: API получения списка идентификаторов типов занятий для данной дисциплины группы.
      operationId: get_group_discipline_types_api_groups__group_id__disciplines__discipline_id__types_ids_get
      parameters:
        - required: true
          schema:
            title: Group Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: group_id
          in: path
        - required: true
          schema:
            title: Discipline Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: discipline_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Group Discipline Types Api Groups  Group Id  Disciplines  Discipline Id  Types Ids Get
                type: array
                items:
                  type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/groups/{group_id}:
    get:
      tags:
        - group
      summary: Get Group
      description: API получения группы по идентификатору.
      operationId: get_group_api_groups__group_id__get
      parameters:
        - required: true
          schema:
            title: Group Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: group_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupFullInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - group
      summary: Update Group
      description: API изменения группы.
      operationId: update_group_api_groups__group_id__put
      parameters:
        - required: true
          schema:
            title: Group Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: group_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - group
      summary: Delete Group
      description: API удаления группы.
      operationId: delete_group_api_groups__group_id__delete
      parameters:
        - required: true
          schema:
            title: Group Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: group_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/groups/import:
    post:
      tags:
        - group
      summary: Import Groups
      description: API импорта групп.
      operationId: import_groups_api_groups_import_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_import_groups_api_groups_import_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Import Groups Api Groups Import Post
                type: array
                items:
                  $ref: '#/components/schemas/GroupInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/disciplines:
    get:
      tags:
        - discipline
      summary: Get Disciplines
      description: API получения дисциплин.
      operationId: get_disciplines_api_disciplines_get
      parameters:
        - description: Значение для поиска
          required: false
          schema:
            title: Search
            type: string
            description: Значение для поиска
          name: search
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Disciplines Api Disciplines Get
                type: array
                items:
                  $ref: '#/components/schemas/DisciplineInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - discipline
      summary: Create Discipline
      description: API добавления дисциплины.
      operationId: create_discipline_api_disciplines_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisciplineCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Discipline Api Disciplines Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/disciplines/{discipline_id}/faculties_ids:
    get:
      tags:
        - discipline
      summary: Get Discipline Faculties
      description: API получения списка идентификаторов факультетов с данной дисциплиной.
      operationId: get_discipline_faculties_api_disciplines__discipline_id__faculties_ids_get
      parameters:
        - required: true
          schema:
            title: Discipline Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: discipline_id
          in: path
        - required: false
          schema:
            title: Teacher Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: teacher_id
          in: query
        - required: false
          schema:
            title: Lesson Type Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: lesson_type_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Discipline Faculties Api Disciplines  Discipline Id  Faculties Ids Get
                type: array
                items:
                  type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/disciplines/{discipline_id}:
    get:
      tags:
        - discipline
      summary: Get Discipline
      description: API получения дисциплины.
      operationId: get_discipline_api_disciplines__discipline_id__get
      parameters:
        - required: true
          schema:
            title: Discipline Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: discipline_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisciplineInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - discipline
      summary: Update Discipline
      description: API изменения дисциплины.
      operationId: update_discipline_api_disciplines__discipline_id__put
      parameters:
        - required: true
          schema:
            title: Discipline Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: discipline_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisciplineUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - discipline
      summary: Delete Discipline
      description: API удаления дисциплины.
      operationId: delete_discipline_api_disciplines__discipline_id__delete
      parameters:
        - required: true
          schema:
            title: Discipline Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: discipline_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/disciplines/import:
    post:
      tags:
        - discipline
      summary: Import Disciplines
      description: API импорта дисциплин.
      operationId: import_disciplines_api_disciplines_import_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_import_disciplines_api_disciplines_import_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Import Disciplines Api Disciplines Import Post
                type: array
                items:
                  $ref: '#/components/schemas/DisciplineInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/teachers:
    get:
      tags:
        - teacher
      summary: Get Teachers
      description: API получения преподавателей.
      operationId: get_teachers_api_teachers_get
      parameters:
        - description: Значение для поиска
          required: false
          schema:
            title: Search
            type: string
            description: Значение для поиска
          name: search
          in: query
        - description: Список ученых званий
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TeacherAcademicTitle'
            description: Список ученых званий
          name: academic_titles
          in: query
        - description: Список идентификаторов ученых степеней
          required: false
          schema:
            title: Academic Degrees
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов ученых степеней
          name: academic_degrees
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Teachers Api Teachers Get
                type: array
                items:
                  $ref: '#/components/schemas/TeacherInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - teacher
      summary: Create Teacher
      description: API добавления преподавателя.
      operationId: create_teacher_api_teachers_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Teacher Api Teachers Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/teachers/academic_titles:
    get:
      tags:
        - teacher
      summary: Get Academic Titles
      description: |-
        API получения ученых званий.

        1 - Лаборант

        2 - Старший лаборант

        3 - Ассистент

        4 - Преподаватель

        5 - Старший преподаватель

        6 - Доцент

        7 = Профессор

        8 - Завкафедрой

        9 - Декан

        10 - Проректор

        11 - Ректор
      operationId: get_academic_titles_api_teachers_academic_titles_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Academic Titles Api Teachers Academic Titles Get
                type: object
  /api/teachers/academic_degrees:
    get:
      tags:
        - teacher
      summary: Get Academic Degrees
      description: API получения ученых степеней.
      operationId: get_academic_degrees_api_teachers_academic_degrees_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Academic Degrees Api Teachers Academic Degrees Get
                type: array
                items:
                  $ref: '#/components/schemas/TeacherAcademicDegreeInDb'
  /api/teachers/{teacher_id}/groups_ids:
    get:
      tags:
        - teacher
      summary: Get Teacher Groups
      description: API получения списка идентификаторов групп, в которых преподаватель проводит занятия в текущем семестре.
      operationId: get_teacher_groups_api_teachers__teacher_id__groups_ids_get
      parameters:
        - required: true
          schema:
            title: Teacher Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: teacher_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Teacher Groups Api Teachers  Teacher Id  Groups Ids Get
                type: array
                items:
                  type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/teachers/{teacher_id}/disciplines_ids:
    get:
      tags:
        - teacher
      summary: Get Teacher Disciplines
      description: API получения списка идентификаторов дисциплин преподавателя.
      operationId: get_teacher_disciplines_api_teachers__teacher_id__disciplines_ids_get
      parameters:
        - required: true
          schema:
            title: Teacher Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: teacher_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Teacher Disciplines Api Teachers  Teacher Id  Disciplines Ids Get
                type: array
                items:
                  type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/teachers/{teacher_id}/disciplines/{discipline_id}/types_ids:
    get:
      tags:
        - teacher
      summary: Get Teacher Discipline Types
      description: API получения списка идентификаторов типов занятий для данной дисциплины преподавателя.
      operationId: get_teacher_discipline_types_api_teachers__teacher_id__disciplines__discipline_id__types_ids_get
      parameters:
        - required: true
          schema:
            title: Teacher Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: teacher_id
          in: path
        - required: true
          schema:
            title: Discipline Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: discipline_id
          in: path
        - required: false
          schema:
            title: Group Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: group_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Teacher Discipline Types Api Teachers  Teacher Id  Disciplines  Discipline Id  Types Ids Get
                type: array
                items:
                  type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/teachers/{teacher_id}:
    get:
      tags:
        - teacher
      summary: Get Teacher
      description: API получения преподавателя по идентификатору.
      operationId: get_teacher_api_teachers__teacher_id__get
      parameters:
        - required: true
          schema:
            title: Teacher Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: teacher_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeacherFullInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - teacher
      summary: Update Teacher
      description: API изменения преподавателя.
      operationId: update_teacher_api_teachers__teacher_id__put
      parameters:
        - required: true
          schema:
            title: Teacher Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: teacher_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeacherUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - teacher
      summary: Delete Teacher
      description: API удаления преподавателя.
      operationId: delete_teacher_api_teachers__teacher_id__delete
      parameters:
        - required: true
          schema:
            title: Teacher Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: teacher_id
          in: path
        - description: Вместе с пользователем
          required: false
          schema:
            title: With User
            type: boolean
            description: Вместе с пользователем
            default: false
          name: with_user
          in: query
        - description: Вместе с занятиями
          required: false
          schema:
            title: With Lessons
            type: boolean
            description: Вместе с занятиями
            default: true
          name: with_lessons
          in: query
        - description: Преподаватель для замены
          required: false
          schema:
            title: New Lessons Teacher Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Преподаватель для замены
          name: new_lessons_teacher_id
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/teachers/import:
    post:
      tags:
        - teacher
      summary: Import Teachers
      description: API импорта преподавателей.
      operationId: import_teachers_api_teachers_import_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_import_teachers_api_teachers_import_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/students:
    get:
      tags:
        - student
      summary: Get Students
      description: API получения студентов.
      operationId: get_students_api_students_get
      parameters:
        - description: Значение для поиска
          required: false
          schema:
            title: Search
            type: string
            description: Значение для поиска
          name: search
          in: query
        - description: Список идентификаторов групп
          required: false
          schema:
            title: Groups
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов групп
          name: groups
          in: query
        - description: Староста
          required: false
          schema:
            title: Is Main
            type: boolean
            description: Староста
          name: is_main
          in: query
        - description: Заместитель старосты
          required: false
          schema:
            title: Is Deputy Main
            type: boolean
            description: Заместитель старосты
          name: is_deputy_main
          in: query
        - description: Сортируемый столбец
          required: false
          schema:
            $ref: '#/components/schemas/StudentSortBy'
            description: Сортируемый столбец
            default: last_name
          name: sort_by
          in: query
        - description: Параметр сортировки
          required: false
          schema:
            $ref: '#/components/schemas/SortOrder'
            description: Параметр сортировки
            default: asc
          name: sort_order
          in: query
        - required: false
          schema:
            title: Page
            minimum: 1
            type: integer
            default: 1
          name: page
          in: query
        - required: false
          schema:
            title: Size
            maximum: 50
            minimum: 5
            type: integer
            default: 10
          name: size
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_StudentShortInDb_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - student
      summary: Create Student
      description: API добавления студента.
      operationId: create_student_api_students_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Student Api Students Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/students/{student_id}:
    get:
      tags:
        - student
      summary: Get Student
      description: API получения студента по идентификатору.
      operationId: get_student_api_students__student_id__get
      parameters:
        - required: true
          schema:
            title: Student Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: student_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - student
      summary: Update Student
      description: API изменения студента.
      operationId: update_student_api_students__student_id__put
      parameters:
        - required: true
          schema:
            title: Student Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: student_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - student
      summary: Delete Student
      description: API удаления студента.
      operationId: delete_student_api_students__student_id__delete
      parameters:
        - required: true
          schema:
            title: Student Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: student_id
          in: path
        - description: Вместе с пользователем
          required: false
          schema:
            title: With User
            type: boolean
            description: Вместе с пользователем
            default: false
          name: with_user
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/students/import:
    post:
      tags:
        - student
      summary: Import Students
      description: API импорта студентов.
      operationId: import_students_api_students_import_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_import_students_api_students_import_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/places/export:
    post:
      tags:
        - place
      summary: Places Export
      description: API экспорта мест проведения.
      operationId: places_export_api_places_export_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceExport'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/places:
    get:
      tags:
        - place
      summary: Get Places
      description: API получения мест для занятий.
      operationId: get_places_api_places_get
      parameters:
        - description: Значение для поиска
          required: false
          schema:
            title: Search
            type: string
            description: Значение для поиска
          name: search
          in: query
        - description: Список идентификаторов оснащений
          required: false
          schema:
            title: Equipments
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов оснащений
          name: equipments
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Places Api Places Get
                type: array
                items:
                  $ref: '#/components/schemas/PlaceShortInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - place
      summary: Create Place
      description: API добавления места.
      operationId: create_place_api_places_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Place Api Places Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/places/{place_id}:
    get:
      tags:
        - place
      summary: Get Place
      description: API получения места.
      operationId: get_place_api_places__place_id__get
      parameters:
        - required: true
          schema:
            title: Place Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: place_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - place
      summary: Update Place
      description: API изменения места.
      operationId: update_place_api_places__place_id__put
      parameters:
        - required: true
          schema:
            title: Place Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: place_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlaceUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - place
      summary: Delete Place
      description: API удаления места.
      operationId: delete_place_api_places__place_id__delete
      parameters:
        - required: true
          schema:
            title: Place Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: place_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/places/import:
    post:
      tags:
        - place
      summary: Import Places
      description: API импорта мест занятий.
      operationId: import_places_api_places_import_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_import_places_api_places_import_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Import Places Api Places Import Post
                type: array
                items:
                  $ref: '#/components/schemas/PlaceInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/equipments:
    get:
      tags:
        - equipment
      summary: Get Equipments
      description: API получения оснащений к местоположениям.
      operationId: get_equipments_api_equipments_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Equipments Api Equipments Get
                type: array
                items:
                  $ref: '#/components/schemas/EquipmentInDb'
    post:
      tags:
        - equipment
      summary: Create Equipment
      description: API добавления оснащения.
      operationId: create_equipment_api_equipments_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Equipment Api Equipments Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/equipments/{equipment_id}:
    get:
      tags:
        - equipment
      summary: Get Equipment
      description: API получения оснащения.
      operationId: get_equipment_api_equipments__equipment_id__get
      parameters:
        - required: true
          schema:
            title: Equipment Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: equipment_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EquipmentInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - equipment
      summary: Update Equipment
      description: API изменения оснащения.
      operationId: update_equipment_api_equipments__equipment_id__put
      parameters:
        - required: true
          schema:
            title: Equipment Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: equipment_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EquipmentUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - equipment
      summary: Delete Equipment
      description: API удаления оснащения.
      operationId: delete_equipment_api_equipments__equipment_id__delete
      parameters:
        - required: true
          schema:
            title: Equipment Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: equipment_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/equipments/import:
    post:
      tags:
        - equipment
      summary: Import Equipments
      description: API импорта оснащения.
      operationId: import_equipments_api_equipments_import_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_import_equipments_api_equipments_import_post'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Import Equipments Api Equipments Import Post
                type: array
                items:
                  $ref: '#/components/schemas/EquipmentInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/lessons/collision:
    get:
      tags:
        - lesson
      summary: Get Collisions
      description: API получения коллизионных занятий.
      operationId: get_collisions_api_lessons_collision_get
      parameters:
        - description: Дата
          required: true
          schema:
            title: Date
            type: string
            description: Дата
            format: date
          example: '2022-03-28'
          name: date
          in: query
        - description: Номер пары
          required: true
          schema:
            title: Number
            maximum: 9
            minimum: 0
            type: integer
            description: Номер пары
          name: number
          in: query
        - description: Идентификатор семестра факультета
          required: false
          schema:
            title: Semester Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор семестра факультета
          name: semester_faculty_id
          in: query
        - description: Тип пары
          required: false
          schema:
            title: Type Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Тип пары
          name: type_id
          in: query
        - description: Идентификатор дисциплины
          required: false
          schema:
            title: Discipline Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор дисциплины
          name: discipline_id
          in: query
        - description: Идентификатор места
          required: false
          schema:
            title: Place Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор места
          name: place_id
          in: query
        - description: Список идентификаторов групп
          required: true
          schema:
            title: Groups
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов групп
          name: groups
          in: query
        - description: Список идентификаторов преподавателей
          required: false
          schema:
            title: Teachers
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов преподавателей
            default: []
          name: teachers
          in: query
        - description: Дистанционная пара
          required: false
          schema:
            title: Is Remotely
            type: boolean
            description: Дистанционная пара
            default: false
          name: is_remotely
          in: query
        - description: Идентификатор занятия
          required: false
          schema:
            title: Lesson Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор занятия
          name: lesson_id
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Collisions Api Lessons Collision Get
                type: array
                items:
                  $ref: '#/components/schemas/LessonCollision'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/lessons/autocomplete:
    get:
      tags:
        - lesson
      summary: Search Autocomplete
      description: API автодополнения поиска по преподавателям, группам и местам проведения.
      operationId: search_autocomplete_api_lessons_autocomplete_get
      parameters:
        - description: Значение для поиска
          required: true
          schema:
            title: Q
            type: string
            description: Значение для поиска
          name: q
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonAutocomplete'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/lessons/settings:
    get:
      tags:
        - lesson
      summary: Get Lessons Settings
      description: API получения настроек для занятий.
      operationId: get_lessons_settings_api_lessons_settings_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Lessons Settings Api Lessons Settings Get
                type: object
    put:
      tags:
        - lesson
      summary: Update Lessons Settings
      description: API изменения настроек занятий.
      operationId: update_lessons_settings_api_lessons_settings_put
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonsSettings'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/lessons/timetable_settings:
    get:
      tags:
        - lesson
      summary: Get Timetable Settings
      description: API получения настроек для расписаний.
      operationId: get_timetable_settings_api_lessons_timetable_settings_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Timetable Settings Api Lessons Timetable Settings Get
                type: object
  /api/lessons/types:
    get:
      tags:
        - lesson
      summary: Get Types
      description: API получения типов занятий.
      operationId: get_types_api_lessons_types_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Types Api Lessons Types Get
                type: array
                items:
                  $ref: '#/components/schemas/LessonTypeInDb'
  /api/lessons/types/{type_id}:
    get:
      tags:
        - lesson
      summary: Get Type
      description: API получения типа занятия по идентификатору.
      operationId: get_type_api_lessons_types__type_id__get
      parameters:
        - required: true
          schema:
            title: Type Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: type_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonTypeInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/lessons/statuses:
    get:
      tags:
        - lesson
      summary: Get Statuses
      description: API получения статусов занятий.
      operationId: get_statuses_api_lessons_statuses_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Statuses Api Lessons Statuses Get
                type: object
  /api/lessons/history_fields:
    get:
      tags:
        - lesson
      summary: Get History Fields
      description: API получения полей истории.
      operationId: get_history_fields_api_lessons_history_fields_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get History Fields Api Lessons History Fields Get
                type: object
  /api/lessons/{lesson_id}/history:
    get:
      tags:
        - lesson
      summary: Get Lesson History
      description: API получения истории изменений занятия на дату по идентификатору.
      operationId: get_lesson_history_api_lessons__lesson_id__history_get
      parameters:
        - required: true
          schema:
            title: Lesson Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: lesson_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Lesson History Api Lessons  Lesson Id  History Get
                type: array
                items:
                  $ref: '#/components/schemas/LessonHistory'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/lessons/export_ical:
    post:
      tags:
        - lesson
      summary: Lessons Export Ical
      description: API экспорта расписания в iСal-формат.
      operationId: lessons_export_ical_api_lessons_export_ical_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportIcal'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/lessons:
    get:
      tags:
        - lesson
      summary: Get Lessons
      description: |-
        API получения учебных занятий.

        *Если number = 0 и type_id = 5, то подразумевается, что данное занятие распространяется на весь день.*
      operationId: get_lessons_api_lessons_get
      parameters:
        - required: false
          schema:
            $ref: '#/components/schemas/GetLessonHeader'
            default: groups
          name: header
          in: query
        - description: С полной информацией о занятиях
          required: false
          schema:
            title: Full Data
            type: boolean
            description: С полной информацией о занятиях
            default: false
          name: full_data
          in: query
        - description: Значение для поиска
          required: false
          schema:
            title: Search
            type: string
            description: Значение для поиска
          name: search
          in: query
        - description: Дата начала
          required: true
          schema:
            title: Start Date
            type: string
            description: Дата начала
            format: date
          example: '2022-03-28'
          name: start_date
          in: query
        - description: Дата окончания
          required: true
          schema:
            title: End Date
            type: string
            description: Дата окончания
            format: date
          example: '2022-04-03'
          name: end_date
          in: query
        - description: Список номеров занятий
          required: false
          schema:
            title: Numbers
            maximum: 9
            minimum: 0
            type: array
            items:
              maximum: 9
              minimum: 0
              type: integer
            description: Список номеров занятий
          name: numbers
          in: query
        - description: Идентификатор семестра
          required: false
          schema:
            title: Semester Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор семестра
          name: semester_id
          in: query
        - description: Идентификатор семестра факультета
          required: false
          schema:
            title: Semester Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор семестра факультета
          name: semester_faculty_id
          in: query
        - description: Идентификатор факультета
          required: false
          schema:
            title: Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор факультета
          name: faculty_id
          in: query
        - description: Список степеней обучения
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/DegreeStudy'
            description: Список степеней обучения
          name: degree_studies
          in: query
        - description: Список идентификаторов направлений
          required: false
          schema:
            title: Directions
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов направлений
          name: directions
          in: query
        - description: Список идентификаторов профилей
          required: false
          schema:
            title: Profiles
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов профилей
          name: profiles
          in: query
        - description: Список курсов
          required: false
          schema:
            title: Courses
            maximum: 6
            minimum: 1
            type: array
            items:
              maximum: 6
              minimum: 1
              type: integer
            description: Список курсов
          name: courses
          in: query
        - description: Список идентификаторов групп
          required: false
          schema:
            title: Groups
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов групп
          name: groups
          in: query
        - description: Список идентификаторов преподавателей
          required: false
          schema:
            title: Teachers
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов преподавателей
          name: teachers
          in: query
        - description: Список идентификаторов дисциплин
          required: false
          schema:
            title: Disciplines
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов дисциплин
          name: disciplines
          in: query
        - description: Список идентификаторов мест занятий
          required: false
          schema:
            title: Places
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов мест занятий
          name: places
          in: query
        - description: Список идентификаторов типов занятий
          required: false
          schema:
            title: Types
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов типов занятий
          name: types
          in: query
        - description: Тема пары должна быть не указанной
          required: false
          schema:
            title: Theme Is Null
            type: boolean
            description: Тема пары должна быть не указанной
          name: theme_is_null
          in: query
        - description: Статус занятия
          required: false
          schema:
            $ref: '#/components/schemas/LessonStatus'
            description: Статус занятия
          name: status
          in: query
        - description: Сортируемый столбец
          required: false
          schema:
            $ref: '#/components/schemas/LessonSortBy'
            description: Сортируемый столбец
            default: number
          name: sort_by
          in: query
        - description: Параметр сортировки
          required: false
          schema:
            $ref: '#/components/schemas/SortOrder'
            description: Параметр сортировки
            default: asc
          name: sort_order
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Lessons Api Lessons Get
                type: array
                items:
                  $ref: '#/components/schemas/LessonFullNamesInDb'
                anyOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/LessonFullNamesInDb'
                  - $ref: '#/components/schemas/LessonResults'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - lesson
      summary: Create Lesson
      description: API добавления занятия.
      operationId: create_lesson_api_lessons_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonCreateWithParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Lesson Api Lessons Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/lessons/{lesson_id}:
    get:
      tags:
        - lesson
      summary: Get Lesson Short
      description: |-
        API получения учебного занятия по идентификатору.

        *Если number = 0 и type_id = 5, то подразумевается, что данное занятие распространяется на весь день.*
      operationId: get_lesson_short_api_lessons__lesson_id__get
      parameters:
        - required: true
          schema:
            title: Lesson Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: lesson_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - lesson
      summary: Update Lesson
      description: API изменения занятия.
      operationId: update_lesson_api_lessons__lesson_id__put
      parameters:
        - required: true
          schema:
            title: Lesson Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: lesson_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonUpdateWithParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - lesson
      summary: Delete Lesson
      description: API удаления занятия.
      operationId: delete_lesson_api_lessons__lesson_id__delete
      parameters:
        - required: true
          schema:
            title: Lesson Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: lesson_id
          in: path
        - description: Уведомить пользователей
          required: false
          schema:
            title: Notify
            type: boolean
            description: Уведомить пользователей
            default: false
          name: notify
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/lessons/{lesson_id}/full:
    get:
      tags:
        - lesson
      summary: Get Lesson Full
      description: |-
        API получения учебного занятия по идентификатору.

        *Если number = 0 и type_id = 5, то подразумевается, что данное занятие распространяется на весь день.*
      operationId: get_lesson_full_api_lessons__lesson_id__full_get
      parameters:
        - required: true
          schema:
            title: Lesson Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: lesson_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonFullInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/lessons/{lesson_id}/cancel:
    put:
      tags:
        - lesson
      summary: Update Lesson Status Cancel
      description: API отмены занятия.
      operationId: update_lesson_status_cancel_api_lessons__lesson_id__cancel_put
      parameters:
        - required: true
          schema:
            title: Lesson Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: lesson_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonCancelReason'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/lessons/{lesson_id}/theme:
    put:
      tags:
        - lesson
      summary: Update Theme
      description: API изменения темы учебного занятия.
      operationId: update_theme_api_lessons__lesson_id__theme_put
      parameters:
        - required: true
          schema:
            title: Lesson Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: lesson_id
          in: path
        - required: true
          schema:
            title: Theme
            type: string
          name: theme
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/main_lessons/collision:
    get:
      tags:
        - main_lesson
      summary: Get Collisions
      description: API получения коллизионных занятий на семестр.
      operationId: get_collisions_api_main_lessons_collision_get
      parameters:
        - description: День недели
          required: true
          schema:
            title: Weekday
            maximum: 5
            minimum: 0
            type: integer
            description: День недели
          name: weekday
          in: query
        - description: Четность недели
          required: false
          schema:
            title: Parity
            maximum: 1
            minimum: 0
            type: integer
            description: Четность недели
          name: parity
          in: query
        - description: Номер пары
          required: true
          schema:
            title: Number
            maximum: 9
            minimum: 0
            type: integer
            description: Номер пары
          name: number
          in: query
        - description: Идентификатор семестра факультета
          required: false
          schema:
            title: Semester Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор семестра факультета
          name: semester_faculty_id
          in: query
        - description: Тип пары
          required: false
          schema:
            title: Type Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Тип пары
          name: type_id
          in: query
        - description: Идентификатор дисциплины
          required: false
          schema:
            title: Discipline Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор дисциплины
          name: discipline_id
          in: query
        - description: Идентификатор места
          required: false
          schema:
            title: Place Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор места
          name: place_id
          in: query
        - description: Список идентификаторов групп
          required: true
          schema:
            title: Groups
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов групп
          name: groups
          in: query
        - description: Список идентификаторов преподавателей
          required: false
          schema:
            title: Teachers
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов преподавателей
            default: []
          name: teachers
          in: query
        - description: Дистанционная пара
          required: false
          schema:
            title: Is Remotely
            type: boolean
            description: Дистанционная пара
            default: false
          name: is_remotely
          in: query
        - description: Идентификатор основного занятия
          required: false
          schema:
            title: Main Lesson Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор основного занятия
          name: main_lesson_id
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Collisions Api Main Lessons Collision Get
                type: array
                items:
                  $ref: '#/components/schemas/MainLessonCollision'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/main_lessons/export:
    post:
      tags:
        - main_lesson
      summary: Main Lessons Export
      description: API экспорта расписания факультета в xlsx формат.
      operationId: main_lessons_export_api_main_lessons_export_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainLessonExport'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/main_lessons:
    get:
      tags:
        - main_lesson
      summary: Get Main Lessons
      description: API получения учебных занятий на семестр.
      operationId: get_main_lessons_api_main_lessons_get
      parameters:
        - required: false
          schema:
            $ref: '#/components/schemas/GetLessonHeader'
            default: groups
          name: header
          in: query
        - description: Значение для поиска
          required: false
          schema:
            title: Search
            type: string
            description: Значение для поиска
          name: search
          in: query
        - description: Идентификатор факультета
          required: false
          schema:
            title: Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор факультета
          name: faculty_id
          in: query
        - description: Идентификатор семестра
          required: false
          schema:
            title: Semester Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор семестра
          name: semester_id
          in: query
        - description: Идентификатор семестра факультета
          required: false
          schema:
            title: Semester Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор семестра факультета
          name: semester_faculty_id
          in: query
        - description: Список номеров занятий
          required: false
          schema:
            title: Numbers
            maximum: 9
            minimum: 0
            type: array
            items:
              maximum: 9
              minimum: 0
              type: integer
            description: Список номеров занятий
          name: numbers
          in: query
        - description: Список степеней обучения
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/DegreeStudy'
            description: Список степеней обучения
          name: degree_studies
          in: query
        - description: Список идентификаторов направлений
          required: false
          schema:
            title: Directions
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов направлений
          name: directions
          in: query
        - description: Список идентификаторов профилей
          required: false
          schema:
            title: Profiles
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов профилей
          name: profiles
          in: query
        - description: Список курсов
          required: false
          schema:
            title: Courses
            maximum: 6
            minimum: 1
            type: array
            items:
              maximum: 6
              minimum: 1
              type: integer
            description: Список курсов
          name: courses
          in: query
        - description: Список идентификаторов групп
          required: false
          schema:
            title: Groups
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов групп
          name: groups
          in: query
        - description: Список идентификаторов преподавателей
          required: false
          schema:
            title: Teachers
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов преподавателей
          name: teachers
          in: query
        - description: Список идентификаторов дисциплин
          required: false
          schema:
            title: Disciplines
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов дисциплин
          name: disciplines
          in: query
        - description: Список идентификаторов мест занятий
          required: false
          schema:
            title: Places
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов мест занятий
          name: places
          in: query
        - description: Список идентификаторов типов занятий
          required: false
          schema:
            title: Types
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов типов занятий
          name: types
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MainLessonResults'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - main_lesson
      summary: Create Main Lesson
      description: API добавления занятий на семестр.
      operationId: create_main_lesson_api_main_lessons_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainLessonCreateWithParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Main Lesson Api Main Lessons Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/main_lessons/{main_lesson_id}:
    get:
      tags:
        - main_lesson
      summary: Get Main Lesson
      description: API получения учебного занятия на семестр.
      operationId: get_main_lesson_api_main_lessons__main_lesson_id__get
      parameters:
        - required: true
          schema:
            title: Main Lesson Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: main_lesson_id
          in: path
        - description: Полная информация о занятии
          required: false
          schema:
            title: Full Info
            type: boolean
            description: Полная информация о занятии
            default: false
          name: full_info
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Main Lesson Api Main Lessons  Main Lesson Id  Get
                anyOf:
                  - $ref: '#/components/schemas/MainLessonWithRelated'
                  - $ref: '#/components/schemas/MainLessonFullWithRelated'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    put:
      tags:
        - main_lesson
      summary: Update Main Lesson
      description: API изменения основного занятия.
      operationId: update_main_lesson_api_main_lessons__main_lesson_id__put
      parameters:
        - required: true
          schema:
            title: Main Lesson Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: main_lesson_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MainLessonUpdateWithParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - main_lesson
      summary: Delete Main Lesson
      description: API удаления основного занятия.
      operationId: delete_main_lesson_api_main_lessons__main_lesson_id__delete
      parameters:
        - required: true
          schema:
            title: Main Lesson Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: main_lesson_id
          in: path
        - description: Вместе с завершенными
          required: false
          schema:
            title: With Completed
            type: boolean
            description: Вместе с завершенными
            default: false
          name: with_completed
          in: query
        - description: Уведомить пользователей
          required: false
          schema:
            title: Notify
            type: boolean
            description: Уведомить пользователей
            default: false
          name: notify
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/main_lessons/{main_lesson_id}/history:
    get:
      tags:
        - main_lesson
      summary: Get Main Lesson History
      description: API получения истории изменений занятия по идентификатору.
      operationId: get_main_lesson_history_api_main_lessons__main_lesson_id__history_get
      parameters:
        - required: true
          schema:
            title: Main Lesson Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: main_lesson_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Main Lesson History Api Main Lessons  Main Lesson Id  History Get
                type: array
                items:
                  $ref: '#/components/schemas/MainLessonHistory'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/main_lessons/{main_lesson_id}/divide:
    post:
      tags:
        - main_lesson
      summary: Divide Main Lesson
      description: API разделения основного занятия на два по неделям.
      operationId: divide_main_lesson_api_main_lessons__main_lesson_id__divide_post
      parameters:
        - required: true
          schema:
            title: Main Lesson Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: main_lesson_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Divide Main Lesson Api Main Lessons  Main Lesson Id  Divide Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/journal:
    post:
      tags:
        - journal
      summary: Create Journal
      description: API добавления отсутствующих студентов на занятии.
      operationId: create_journal_api_journal_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JournalCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/journal/groups/{group_id}/disciplines/{discipline_id}:
    get:
      tags:
        - journal
      summary: Get Journal
      description: API получения журнала посещаемости группы по данной дисциплине.
      operationId: get_journal_api_journal_groups__group_id__disciplines__discipline_id__get
      parameters:
        - required: true
          schema:
            title: Group Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: group_id
          in: path
        - required: true
          schema:
            title: Discipline Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: discipline_id
          in: path
        - required: false
          schema:
            title: Lesson Type Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: lesson_type_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Journal Api Journal Groups  Group Id  Disciplines  Discipline Id  Get
                type: object
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/journal/lessons/{lesson_id}:
    get:
      tags:
        - journal
      summary: Get Lesson Statistic
      description: API получения статистики данного занятия.
      operationId: get_lesson_statistic_api_journal_lessons__lesson_id__get
      parameters:
        - required: true
          schema:
            title: Lesson Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: lesson_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Lesson Statistic Api Journal Lessons  Lesson Id  Get
                type: object
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/production_calendar:
    get:
      tags:
        - production_calendar
      summary: Get Production Calendar
      description: API получения производственного календаря на выбранный год.
      operationId: get_production_calendar_api_production_calendar_get
      parameters:
        - description: Год
          required: true
          schema:
            title: Year
            maximum: 2050
            minimum: 2020
            type: integer
            description: Год
          name: year
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Production Calendar Api Production Calendar Get
                type: array
                items:
                  $ref: '#/components/schemas/ProductionCalendarDayInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - production_calendar
      summary: Update Production Calendar
      description: API обновления производственного календаря на выбранный год.
      operationId: update_production_calendar_api_production_calendar_put
      parameters:
        - description: Год
          required: true
          schema:
            title: Year
            maximum: 2050
            minimum: 2020
            type: integer
            description: Год
          name: year
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Update Production Calendar Api Production Calendar Put
                type: array
                items:
                  $ref: '#/components/schemas/ProductionCalendarDayInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - production_calendar
      summary: Create Production Calendar Day
      description: API создания дня в производственном календаре.
      operationId: create_production_calendar_day_api_production_calendar_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionCalendarDayCreate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductionCalendarDayInDb'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - production_calendar
      summary: Delete Production Calendar
      description: API удаления производственного календаря на выбранный год.
      operationId: delete_production_calendar_api_production_calendar_delete
      parameters:
        - description: Год
          required: true
          schema:
            title: Year
            maximum: 2050
            minimum: 2020
            type: integer
            description: Год
          name: year
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/production_calendar/day:
    get:
      tags:
        - production_calendar
      summary: Get Production Calendar Day
      description: API получения дня из производственного календаря.
      operationId: get_production_calendar_day_api_production_calendar_day_get
      parameters:
        - description: Дата
          required: true
          schema:
            title: Date
            type: string
            description: Дата
            format: date
          name: date
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Production Calendar Day Api Production Calendar Day Get
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/production_calendar/{production_calendar_day_id}:
    put:
      tags:
        - production_calendar
      summary: Update Production Calendar Day
      description: API изменения дня в производственном календаре.
      operationId: update_production_calendar_day_api_production_calendar__production_calendar_day_id__put
      parameters:
        - required: true
          schema:
            title: Production Calendar Day Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: production_calendar_day_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductionCalendarDayUpdate'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - production_calendar
      summary: Delete Production Calendar Day
      description: API удаления дня в производственном календаре.
      operationId: delete_production_calendar_day_api_production_calendar__production_calendar_day_id__delete
      parameters:
        - required: true
          schema:
            title: Production Calendar Day Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: production_calendar_day_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/statistics:
    get:
      tags:
        - statistics
      summary: Get Statistics
      description: API получения статистики.
      operationId: get_statistics_api_statistics_get
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Statistics Api Statistics Get
                type: object
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/session_events/collision:
    get:
      tags:
        - session_event
      summary: Get Collisions
      description: API получения коллизионных событий сессии.
      operationId: get_collisions_api_session_events_collision_get
      parameters:
        - description: Дата
          required: true
          schema:
            title: Date
            type: string
            description: Дата
            format: date
          example: '2022-03-28'
          name: date
          in: query
        - description: Время
          required: true
          schema:
            title: Time
            type: string
            description: Время
            format: time
          example: '08:00'
          name: time
          in: query
        - description: Дистанционное событие сессии
          required: false
          schema:
            title: Is Remotely
            type: boolean
            description: Дистанционное событие сессии
            default: false
          name: is_remotely
          in: query
        - description: Идентификатор типа события
          required: true
          schema:
            title: Event Type Id
            maximum: 2
            minimum: 1
            type: integer
            description: Идентификатор типа события
          name: event_type_id
          in: query
        - description: Идентификатор дисциплины
          required: true
          schema:
            title: Discipline Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор дисциплины
          name: discipline_id
          in: query
        - description: Идентификатор места
          required: false
          schema:
            title: Place Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор места
          name: place_id
          in: query
        - description: Список идентификаторов групп
          required: true
          schema:
            title: Groups
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов групп
          name: groups
          in: query
        - description: Список идентификаторов преподавателей
          required: true
          schema:
            title: Teachers
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов преподавателей
          name: teachers
          in: query
        - description: Идентификатор семестра
          required: false
          schema:
            title: Semester Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор семестра
          name: semester_id
          in: query
        - description: Идентификатор события сессии
          required: false
          schema:
            title: Session Event Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор события сессии
          name: session_event_id
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Collisions Api Session Events Collision Get
                type: array
                items:
                  $ref: '#/components/schemas/SessionEventCollision'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/session_events/export:
    post:
      tags:
        - session_event
      summary: Session Events Export
      description: API запуска экспорта расписания сессии факультета.
      operationId: session_events_export_api_session_events_export_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionEventExport'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/session_events/export_ical:
    post:
      tags:
        - session_event
      summary: Session Events Export Ical
      description: API экспорта расписания в iСal-формат.
      operationId: session_events_export_ical_api_session_events_export_ical_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportIcal'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/session_events:
    get:
      tags:
        - session_event
      summary: Get Session Events
      description: API получения событий сессии.
      operationId: get_session_events_api_session_events_get
      parameters:
        - description: Идентификатор факультета
          required: false
          schema:
            title: Faculty Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор факультета
          name: faculty_id
          in: query
        - description: Идентификатор семестра
          required: false
          schema:
            title: Semester Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор семестра
          name: semester_id
          in: query
        - description: Дата события сессии
          required: false
          schema:
            title: Date
            type: string
            description: Дата события сессии
            format: date
          example: '2023-01-10'
          name: date
          in: query
        - description: Список идентификаторов направлений
          required: false
          schema:
            title: Directions
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов направлений
          name: directions
          in: query
        - description: Список курсов
          required: false
          schema:
            title: Courses
            maximum: 6
            minimum: 1
            type: array
            items:
              maximum: 6
              minimum: 1
              type: integer
            description: Список курсов
          name: courses
          in: query
        - description: Список идентификаторов мест занятий
          required: false
          schema:
            title: Places
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов мест занятий
          name: places
          in: query
        - description: Список идентификаторов групп
          required: false
          schema:
            title: Groups
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов групп
          name: groups
          in: query
        - description: Список идентификаторов преподавателей
          required: false
          schema:
            title: Teachers
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов преподавателей
          name: teachers
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionEventData'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    post:
      tags:
        - session_event
      summary: Create Session Event
      description: API создания события сессии.
      operationId: create_session_event_api_session_events_post
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionEventCreateWithParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Create Session Event Api Session Events Post
                type: integer
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/session_events/{session_event_id}:
    put:
      tags:
        - session_event
      summary: Update Session Event
      description: API изменения события сессии.
      operationId: update_session_event_api_session_events__session_event_id__put
      parameters:
        - required: true
          schema:
            title: Session Event Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: session_event_id
          in: path
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionEventUpdateWithParams'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
    delete:
      tags:
        - session_event
      summary: Delete Session Event
      description: API удаления события сессии.
      operationId: delete_session_event_api_session_events__session_event_id__delete
      parameters:
        - required: true
          schema:
            title: Session Event Id
            maximum: 2147483647
            minimum: 1
            type: integer
          name: session_event_id
          in: path
        - description: Уведомить пользователей
          required: false
          schema:
            title: Notify
            type: boolean
            description: Уведомить пользователей
            default: false
          name: notify
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/telegram/users/id:
    get:
      tags:
        - telegram
      summary: Get Users Telegram Ids
      description: API получения списка идентификаторов клиентов telegram всех пользователей.
      operationId: get_users_telegram_ids_api_telegram_users_id_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Users Telegram Ids Api Telegram Users Id Get
                type: array
                items:
                  type: string
  /api/telegram/students/id:
    get:
      tags:
        - telegram
      summary: Get Students Telegram Ids
      description: API получения списка идентификаторов клиентов telegram студентов запрашиваемых групп.
      operationId: get_students_telegram_ids_api_telegram_students_id_get
      parameters:
        - description: Список идентификаторов групп
          required: false
          schema:
            title: Groups
            maximum: 2147483647
            minimum: 1
            type: array
            items:
              maximum: 2147483647
              minimum: 1
              type: integer
            description: Список идентификаторов групп
          name: groups
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Students Telegram Ids Api Telegram Students Id Get
                type: array
                items:
                  type: string
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api/logs/statuses:
    get:
      tags:
        - logs
      summary: Get Log Statuses
      description: API получения статусов Log.
      operationId: get_log_statuses_api_logs_statuses_get
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Log Statuses Api Logs Statuses Get
                type: object
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/logs/modules:
    get:
      tags:
        - logs
      summary: Get Log Modules
      description: API получения списка модулей для логов.
      operationId: get_log_modules_api_logs_modules_get
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Log Modules Api Logs Modules Get
                type: array
                items:
                  $ref: '#/components/schemas/LogModule'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/logs/entities:
    get:
      tags:
        - logs
      summary: Get Log Entities
      description: API получения списка сущностей для логов.
      operationId: get_log_entities_api_logs_entities_get
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Log Entities Api Logs Entities Get
                type: array
                items:
                  $ref: '#/components/schemas/LogEntity'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/logs/actions:
    get:
      tags:
        - logs
      summary: Get Log Actions
      description: API получения списка действий для логов.
      operationId: get_log_actions_api_logs_actions_get
      parameters:
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                title: Response Get Log Actions Api Logs Actions Get
                type: array
                items:
                  $ref: '#/components/schemas/LogAction'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
  /api/logs:
    get:
      tags:
        - logs
      summary: Get Logs
      description: API получения логов.
      operationId: get_logs_api_logs_get
      parameters:
        - description: Идентификатор модуля
          required: false
          schema:
            title: Module Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор модуля
          name: module_id
          in: query
        - description: Идентификатор сущности
          required: false
          schema:
            title: Entity Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор сущности
          name: entity_id
          in: query
        - description: Идентификатор действия
          required: false
          schema:
            title: Action Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор действия
          name: action_id
          in: query
        - description: Идентификатор пользователя
          required: false
          schema:
            title: User Id
            maximum: 2147483647
            minimum: 1
            type: integer
            description: Идентификатор пользователя
          name: user_id
          in: query
        - description: Список статусов
          required: false
          schema:
            type: array
            items:
              $ref: '#/components/schemas/LogStatusAttr'
            description: Список статусов
          name: status
          in: query
        - description: Дата начала
          required: false
          schema:
            title: Start Date
            type: string
            description: Дата начала
            format: date
          name: start_date
          in: query
        - description: Дата окончания
          required: false
          schema:
            title: End Date
            type: string
            description: Дата окончания
            format: date
          name: end_date
          in: query
        - required: false
          schema:
            title: Page
            minimum: 1
            type: integer
            default: 1
          name: page
          in: query
        - required: false
          schema:
            title: Size
            maximum: 50
            minimum: 5
            type: integer
            default: 10
          name: size
          in: query
        - required: false
          schema:
            title: Client Name
            type: string
          name: Client_name
          in: header
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_Log_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
      security:
        - OAuth2PasswordBearer: []
components:
  schemas:
    AccessToken:
      title: AccessToken
      required:
        - access_token
        - token_type
      type: object
      properties:
        access_token:
          title: Access Token
          type: string
        token_type:
          title: Token Type
          type: string
    AttendanceSettingsUpdate:
      title: AttendanceSettingsUpdate
      type: object
      properties:
        attendance_lecture_time:
          title: Attendance Lecture Time
          maxLength: 2
          type: string
        attendance_practice_time:
          title: Attendance Practice Time
          maxLength: 2
          type: string
    AuthSettings:
      title: AuthSettings
      required:
        - web_access_token_expire_minutes
        - bot_access_token_expire_minutes
        - mobile_access_token_expire_minutes
        - refresh_token_expire_minutes
      type: object
      properties:
        web_access_token_expire_minutes:
          title: Web Access Token Expire Minutes
          minimum: 1
          type: integer
        bot_access_token_expire_minutes:
          title: Bot Access Token Expire Minutes
          minimum: 1
          type: integer
        mobile_access_token_expire_minutes:
          title: Mobile Access Token Expire Minutes
          minimum: 1
          type: integer
        refresh_token_expire_minutes:
          title: Refresh Token Expire Minutes
          minimum: 1
          type: integer
    BellCreate:
      title: BellCreate
      required:
        - number
        - time
      type: object
      properties:
        number:
          title: Number
          maximum: 9
          minimum: 1
          type: integer
        time:
          title: Time
          type: string
    BellInDb:
      title: BellInDb
      required:
        - id
        - number
        - time
      type: object
      properties:
        id:
          title: Id
          type: integer
        number:
          title: Number
          type: integer
        time:
          title: Time
          type: string
          format: time
    BellUpdate:
      title: BellUpdate
      required:
        - number
        - time
      type: object
      properties:
        number:
          title: Number
          maximum: 9
          minimum: 1
          type: integer
        time:
          title: Time
          type: string
    Body_import_bells_api_bells_import_post:
      title: Body_import_bells_api_bells_import_post
      required:
        - file
      type: object
      properties:
        file:
          title: File
          type: string
          description: Excel-файл с информацией о звонках
          format: binary
    Body_import_directions_api_directions_import_post:
      title: Body_import_directions_api_directions_import_post
      required:
        - file
      type: object
      properties:
        file:
          title: File
          type: string
          description: Excel-файл с информацией о направлениях
          format: binary
    Body_import_disciplines_api_disciplines_import_post:
      title: Body_import_disciplines_api_disciplines_import_post
      required:
        - file
      type: object
      properties:
        file:
          title: File
          type: string
          description: Excel-файл с информацией о дисциплинах
          format: binary
    Body_import_equipments_api_equipments_import_post:
      title: Body_import_equipments_api_equipments_import_post
      required:
        - file
      type: object
      properties:
        file:
          title: File
          type: string
          description: Excel-файл с информацией об оснащении
          format: binary
    Body_import_faculties_api_faculties_import_post:
      title: Body_import_faculties_api_faculties_import_post
      required:
        - file
      type: object
      properties:
        file:
          title: File
          type: string
          description: Excel-файл с информацией о факультетах
          format: binary
    Body_import_groups_api_groups_import_post:
      title: Body_import_groups_api_groups_import_post
      required:
        - file
      type: object
      properties:
        file:
          title: File
          type: string
          description: Excel-файл с информацией о группах
          format: binary
    Body_import_places_api_places_import_post:
      title: Body_import_places_api_places_import_post
      required:
        - file
      type: object
      properties:
        file:
          title: File
          type: string
          description: Excel-файл с информацией о местах занятий
          format: binary
    Body_import_profiles_api_profiles_import_post:
      title: Body_import_profiles_api_profiles_import_post
      required:
        - file
      type: object
      properties:
        file:
          title: File
          type: string
          description: Excel-файл с информацией о профилях обучения
          format: binary
    Body_import_students_api_students_import_post:
      title: Body_import_students_api_students_import_post
      required:
        - file
      type: object
      properties:
        file:
          title: File
          type: string
          description: Excel-файл с информацией о студентах
          format: binary
    Body_import_teachers_api_teachers_import_post:
      title: Body_import_teachers_api_teachers_import_post
      required:
        - file
      type: object
      properties:
        file:
          title: File
          type: string
          description: Excel-файл с информацией о преподавателях
          format: binary
    Body_login_api_auth_login_post:
      title: Body_login_api_auth_login_post
      required:
        - username
        - password
      type: object
      properties:
        grant_type:
          title: Grant Type
          pattern: password
          type: string
        username:
          title: Username
          type: string
        password:
          title: Password
          type: string
        scope:
          title: Scope
          type: string
          default: ''
        client_id:
          title: Client Id
          type: string
        client_secret:
          title: Client Secret
          type: string
    DegreeStudy:
      title: DegreeStudy
      enum:
        - Бакалавриат
        - Магистратура
        - Специалитет
        - СПО
      type: string
      description: Список констант для `Direction.degree_study`
    DirectionCreate:
      title: DirectionCreate
      required:
        - name
        - cipher
        - degree_study
        - faculty_id
      type: object
      properties:
        name:
          title: Name
          maxLength: 90
          type: string
        short_name:
          title: Short Name
          maxLength: 30
          type: string
        cipher:
          title: Cipher
          maxLength: 15
          type: string
        degree_study:
          $ref: '#/components/schemas/DegreeStudy'
        faculty_id:
          title: Faculty Id
          maximum: 2147483647
          minimum: 1
          type: integer
        place_loads:
          title: Place Loads
          type: array
          items:
            $ref: '#/components/schemas/DirectionPlaceLoadInfo'
          default: []
    DirectionInDb:
      title: DirectionInDb
      required:
        - name
        - degree_study
        - faculty_id
        - id
      type: object
      properties:
        name:
          title: Name
          type: string
        short_name:
          title: Short Name
          type: string
        cipher:
          title: Cipher
          type: string
        degree_study:
          $ref: '#/components/schemas/DegreeStudy'
        faculty_id:
          title: Faculty Id
          type: integer
        place_loads:
          title: Place Loads
          type: array
          items:
            $ref: '#/components/schemas/DirectionPlaceLoadInfo'
        id:
          title: Id
          type: integer
    DirectionPlaceLoadInfo:
      title: DirectionPlaceLoadInfo
      required:
        - course
        - min_load
        - max_load
      type: object
      properties:
        course:
          title: Course
          maximum: 6
          minimum: 1
          type: integer
        min_load:
          title: Min Load
          maximum: 48
          minimum: 0
          type: integer
        max_load:
          title: Max Load
          maximum: 48
          minimum: 0
          type: integer
    DirectionShortInDb:
      title: DirectionShortInDb
      required:
        - name
        - degree_study
        - faculty_id
        - id
      type: object
      properties:
        name:
          title: Name
          type: string
        short_name:
          title: Short Name
          type: string
        cipher:
          title: Cipher
          type: string
        degree_study:
          $ref: '#/components/schemas/DegreeStudy'
        faculty_id:
          title: Faculty Id
          type: integer
        id:
          title: Id
          type: integer
    DirectionUpdate:
      title: DirectionUpdate
      required:
        - name
        - cipher
        - degree_study
        - faculty_id
      type: object
      properties:
        name:
          title: Name
          maxLength: 90
          type: string
        short_name:
          title: Short Name
          maxLength: 30
          type: string
        cipher:
          title: Cipher
          maxLength: 15
          type: string
        degree_study:
          $ref: '#/components/schemas/DegreeStudy'
        faculty_id:
          title: Faculty Id
          maximum: 2147483647
          minimum: 1
          type: integer
        place_loads:
          title: Place Loads
          type: array
          items:
            $ref: '#/components/schemas/DirectionPlaceLoadInfo'
          default: []
    DisciplineCreate:
      title: DisciplineCreate
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          maxLength: 150
          type: string
        short_name:
          title: Short Name
          maxLength: 70
          type: string
        faculties_ids:
          title: Faculties Ids
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
    DisciplineInDb:
      title: DisciplineInDb
      required:
        - name
        - id
      type: object
      properties:
        name:
          title: Name
          type: string
        short_name:
          title: Short Name
          type: string
        id:
          title: Id
          type: integer
        faculties_ids:
          title: Faculties Ids
          type: array
          items:
            type: integer
    DisciplineUpdate:
      title: DisciplineUpdate
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          maxLength: 150
          type: string
        short_name:
          title: Short Name
          maxLength: 70
          type: string
        faculties_ids:
          title: Faculties Ids
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
    EquipmentCreate:
      title: EquipmentCreate
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          maxLength: 50
          type: string
    EquipmentInDb:
      title: EquipmentInDb
      required:
        - name
        - id
      type: object
      properties:
        name:
          title: Name
          type: string
        id:
          title: Id
          type: integer
    EquipmentUpdate:
      title: EquipmentUpdate
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          maxLength: 50
          type: string
    ExportExtraInfo:
      title: ExportExtraInfo
      type: object
      properties:
        vice_rector_name:
          title: Vice Rector Name
          type: string
          default: Фамилия И.О.
        head_of_umu_name:
          title: Head Of Umu Name
          type: string
          default: Фамилия И.О.
        dean_name:
          title: Dean Name
          type: string
          default: Фамилия И.О.
    ExportIcal:
      title: ExportIcal
      type: object
      properties:
        semester_faculty_id:
          title: Semester Faculty Id
          maximum: 2147483647
          minimum: 1
          type: integer
        group_id:
          title: Group Id
          maximum: 2147483647
          minimum: 1
          type: integer
        teacher_id:
          title: Teacher Id
          maximum: 2147483647
          minimum: 1
          type: integer
    FacultyCreate:
      title: FacultyCreate
      required:
        - name
        - short_name
      type: object
      properties:
        name:
          title: Name
          maxLength: 60
          type: string
        short_name:
          title: Short Name
          maxLength: 10
          type: string
        link_source_timetable:
          title: Link Source Timetable
          maxLength: 250
          type: string
    FacultyForbidden:
      title: FacultyForbidden
      type: object
      properties:
        faculties_forbidden:
          title: Faculties Forbidden
          type: array
          items:
            type: integer
    FacultyInDb:
      title: FacultyInDb
      required:
        - name
        - short_name
        - inactive
        - id
      type: object
      properties:
        name:
          title: Name
          type: string
        short_name:
          title: Short Name
          type: string
        link_source_timetable:
          title: Link Source Timetable
          type: string
        inactive:
          title: Inactive
          type: boolean
        id:
          title: Id
          type: integer
    FacultyUpdate:
      title: FacultyUpdate
      required:
        - name
        - short_name
      type: object
      properties:
        name:
          title: Name
          maxLength: 60
          type: string
        short_name:
          title: Short Name
          maxLength: 10
          type: string
        link_source_timetable:
          title: Link Source Timetable
          maxLength: 250
          type: string
        inactive:
          title: Inactive
          type: boolean
    GetLessonHeader:
      title: GetLessonHeader
      enum:
        - groups
        - teachers
        - places
      type: string
      description: An enumeration.
    GroupCreate:
      title: GroupCreate
      required:
        - name
        - course
        - faculty_id
        - direction_id
      type: object
      properties:
        name:
          title: Name
          maxLength: 30
          type: string
        course:
          title: Course
          maximum: 6
          minimum: 1
          type: integer
        faculty_id:
          title: Faculty Id
          maximum: 2147483647
          minimum: 1
          type: integer
        direction_id:
          title: Direction Id
          maximum: 2147483647
          minimum: 1
          type: integer
        profile_id:
          title: Profile Id
          maximum: 2147483647
          minimum: 1
          type: integer
    GroupFullInDb:
      title: GroupFullInDb
      required:
        - id
        - name
        - course
        - faculty
        - direction
        - size
      type: object
      properties:
        id:
          title: Id
          type: integer
        name:
          title: Name
          type: string
        course:
          title: Course
          type: integer
        faculty:
          $ref: '#/components/schemas/FacultyInDb'
        direction:
          $ref: '#/components/schemas/DirectionInDb'
        profile:
          $ref: '#/components/schemas/ProfileInDb'
        size:
          title: Size
          type: integer
    GroupInDb:
      title: GroupInDb
      required:
        - name
        - course
        - faculty_id
        - direction_id
        - size
        - id
      type: object
      properties:
        name:
          title: Name
          type: string
        course:
          title: Course
          type: integer
        faculty_id:
          title: Faculty Id
          type: integer
        direction_id:
          title: Direction Id
          type: integer
        profile_id:
          title: Profile Id
          type: integer
        size:
          title: Size
          type: integer
        id:
          title: Id
          type: integer
    GroupShortInDb:
      title: GroupShortInDb
      required:
        - id
        - name
      type: object
      properties:
        id:
          title: Id
          type: integer
        name:
          title: Name
          type: string
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
    HistoryField:
      title: HistoryField
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
      type: integer
      description: Список констант для истории`
    HourlyReportSettingsUpdate:
      title: HourlyReportSettingsUpdate
      type: object
      properties:
        set_theme_time:
          title: Set Theme Time
          maxLength: 2
          type: string
    JournalCreate:
      title: JournalCreate
      required:
        - data
        - group_id
        - lesson_id
        - main_student_id
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/JournalStudentReason'
        group_id:
          title: Group Id
          type: integer
        lesson_id:
          title: Lesson Id
          type: integer
        main_student_id:
          title: Main Student Id
          type: integer
    JournalStudentReason:
      title: JournalStudentReason
      required:
        - student_id
        - is_serious_reason
      type: object
      properties:
        student_id:
          title: Student Id
          type: integer
        is_serious_reason:
          title: Is Serious Reason
          type: boolean
    LastChange:
      title: LastChange
      required:
        - timestamp
        - user
      type: object
      properties:
        timestamp:
          title: Timestamp
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/app__schemas__user__UserFullNameInDb'
    LessonAutocomplete:
      title: LessonAutocomplete
      required:
        - teachers
        - places
        - groups
      type: object
      properties:
        teachers:
          title: Teachers
          type: array
          items:
            $ref: '#/components/schemas/TeacherShortInDb'
        places:
          title: Places
          type: array
          items:
            $ref: '#/components/schemas/PlaceNameInDb'
        groups:
          title: Groups
          type: array
          items:
            $ref: '#/components/schemas/GroupShortInDb'
    LessonCancelReason:
      title: LessonCancelReason
      type: object
      properties:
        notify:
          title: Notify
          type: boolean
          default: false
        reason:
          title: Reason
          type: string
        show_reason_students:
          title: Show Reason Students
          type: boolean
    LessonCollision:
      title: LessonCollision
      required:
        - field
        - data
      type: object
      properties:
        field:
          title: Field
          type: string
        data:
          $ref: '#/components/schemas/LessonCollisionInfo'
    LessonCollisionInfo:
      title: LessonCollisionInfo
      required:
        - number
        - is_remotely
        - is_elective
        - type
        - date
        - id
      type: object
      properties:
        number:
          title: Number
          type: integer
        is_remotely:
          title: Is Remotely
          type: boolean
        is_elective:
          title: Is Elective
          type: boolean
        type:
          $ref: '#/components/schemas/LessonTypeInDb'
        discipline:
          $ref: '#/components/schemas/DisciplineInDb'
        place:
          $ref: '#/components/schemas/PlaceInDb'
        date:
          title: Date
          type: string
          format: date
        id:
          title: Id
          type: integer
        group_names:
          title: Group Names
          type: array
          items:
            type: string
        teacher_names:
          title: Teacher Names
          type: array
          items:
            type: string
    LessonCreate:
      title: LessonCreate
      required:
        - number
        - type_id
        - groups
        - semester_faculty_id
        - date
      type: object
      properties:
        number:
          title: Number
          maximum: 9
          minimum: 0
          type: integer
        type_id:
          title: Type Id
          maximum: 2147483647
          minimum: 1
          type: integer
        discipline_id:
          title: Discipline Id
          maximum: 2147483647
          minimum: 1
          type: integer
        is_remotely:
          title: Is Remotely
          type: boolean
          default: false
        is_elective:
          title: Is Elective
          type: boolean
          default: false
        groups:
          title: Groups
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
        teachers:
          title: Teachers
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
          default: []
        place_id:
          title: Place Id
          maximum: 2147483647
          minimum: 1
          type: integer
        semester_faculty_id:
          title: Semester Faculty Id
          maximum: 2147483647
          minimum: 1
          type: integer
        date:
          title: Date
          type: string
    LessonCreateWithParams:
      title: LessonCreateWithParams
      required:
        - lesson
      type: object
      properties:
        ignore_collisions:
          title: Ignore Collisions
          type: boolean
          default: false
        notify:
          title: Notify
          type: boolean
          default: false
        lesson:
          $ref: '#/components/schemas/LessonCreate'
    LessonFullInDb:
      title: LessonFullInDb
      required:
        - id
        - status
        - groups
        - teachers
        - number
        - is_remotely
        - is_elective
        - type
        - date
      type: object
      properties:
        id:
          title: Id
          type: integer
        theme:
          title: Theme
          type: string
        status:
          $ref: '#/components/schemas/LessonStatus'
        groups:
          title: Groups
          type: array
          items:
            type: integer
        teachers:
          title: Teachers
          type: array
          items:
            type: integer
        number:
          title: Number
          type: integer
        is_remotely:
          title: Is Remotely
          type: boolean
        is_elective:
          title: Is Elective
          type: boolean
        type:
          $ref: '#/components/schemas/LessonTypeInDb'
        discipline:
          $ref: '#/components/schemas/DisciplineInDb'
        place:
          $ref: '#/components/schemas/PlaceInDb'
        date:
          title: Date
          type: string
          format: date
    LessonFullNamesInDb:
      title: LessonFullNamesInDb
      required:
        - id
        - status
        - number
        - is_remotely
        - is_elective
        - type
        - date
      type: object
      properties:
        id:
          title: Id
          type: integer
        theme:
          title: Theme
          type: string
        status:
          $ref: '#/components/schemas/LessonStatus'
        group_names:
          title: Group Names
          type: array
          items:
            type: string
        teacher_names:
          title: Teacher Names
          type: array
          items:
            type: string
        number:
          title: Number
          type: integer
        is_remotely:
          title: Is Remotely
          type: boolean
        is_elective:
          title: Is Elective
          type: boolean
        type:
          $ref: '#/components/schemas/LessonTypeInDb'
        discipline:
          $ref: '#/components/schemas/DisciplineInDb'
        place:
          $ref: '#/components/schemas/PlaceInDb'
        date:
          title: Date
          type: string
          format: date
    LessonHistory:
      title: LessonHistory
      required:
        - id
        - user
        - changes
        - timestamp
      type: object
      properties:
        id:
          title: Id
          type: integer
        user:
          $ref: '#/components/schemas/app__schemas__user__UserFullNameInDb'
        changes:
          title: Changes
          type: array
          items:
            $ref: '#/components/schemas/LessonHistoryField'
        timestamp:
          title: Timestamp
          type: string
          format: date-time
    LessonHistoryField:
      title: LessonHistoryField
      required:
        - field
      type: object
      properties:
        field:
          $ref: '#/components/schemas/HistoryField'
        new_value:
          title: New Value
          type: string
        old_value:
          title: Old Value
          type: string
    LessonInDb:
      title: LessonInDb
      required:
        - id
        - status
        - groups
        - teachers
        - number
        - is_remotely
        - is_elective
        - type_id
        - date
      type: object
      properties:
        id:
          title: Id
          type: integer
        theme:
          title: Theme
          type: string
        status:
          $ref: '#/components/schemas/LessonStatus'
        groups:
          title: Groups
          type: array
          items:
            type: integer
        teachers:
          title: Teachers
          type: array
          items:
            type: integer
        number:
          title: Number
          type: integer
        is_remotely:
          title: Is Remotely
          type: boolean
        is_elective:
          title: Is Elective
          type: boolean
        type_id:
          title: Type Id
          type: integer
        discipline_id:
          title: Discipline Id
          type: integer
        place_id:
          title: Place Id
          type: integer
        date:
          title: Date
          type: string
          format: date
    LessonRelated:
      title: LessonRelated
      required:
        - id
        - date
      type: object
      properties:
        id:
          title: Id
          type: integer
        date:
          title: Date
          type: string
          format: date
    LessonResults:
      title: LessonResults
      required:
        - header_ids
        - lessons
      type: object
      properties:
        header_ids:
          title: Header Ids
          type: array
          items:
            type: integer
        lessons:
          title: Lessons
          type: array
          items:
            $ref: '#/components/schemas/LessonInDb'
        last_change:
          $ref: '#/components/schemas/LastChange'
        mode:
          $ref: '#/components/schemas/ViewMode'
    LessonSortBy:
      title: LessonSortBy
      enum:
        - number
        - direction
        - profile
        - course
        - group
        - discipline
        - place
        - type
      type: string
      description: An enumeration.
    LessonStatus:
      title: LessonStatus
      enum:
        - 1
        - 2
        - 3
      type: integer
      description: Список констант для `Lesson.status`
    LessonTypeInDb:
      title: LessonTypeInDb
      required:
        - name
        - short_name
        - color
        - id
      type: object
      properties:
        name:
          title: Name
          type: string
        short_name:
          title: Short Name
          type: string
        color:
          title: Color
          type: string
        id:
          title: Id
          type: integer
    LessonUpdate:
      title: LessonUpdate
      type: object
      properties:
        discipline_id:
          title: Discipline Id
          maximum: 2147483647
          minimum: 1
          type: integer
        number:
          title: Number
          maximum: 9
          minimum: 0
          type: integer
        type_id:
          title: Type Id
          maximum: 2147483647
          minimum: 1
          type: integer
        is_remotely:
          title: Is Remotely
          type: boolean
          default: false
        is_elective:
          title: Is Elective
          type: boolean
          default: false
        groups:
          title: Groups
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
        teachers:
          title: Teachers
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
          default: []
        place_id:
          title: Place Id
          maximum: 2147483647
          minimum: 1
          type: integer
        date:
          title: Date
          type: string
    LessonUpdateWithParams:
      title: LessonUpdateWithParams
      required:
        - lesson
      type: object
      properties:
        ignore_collisions:
          title: Ignore Collisions
          type: boolean
          default: false
        notify:
          title: Notify
          type: boolean
          default: false
        lesson:
          $ref: '#/components/schemas/LessonUpdate'
    LessonsSettings:
      title: LessonsSettings
      required:
        - duration_minutes
      type: object
      properties:
        duration_minutes:
          title: Duration Minutes
          minimum: 1
          type: integer
    Log:
      title: Log
      required:
        - id
        - message
        - status
        - date
        - time
        - module
        - action
      type: object
      properties:
        id:
          title: Id
          type: integer
        message:
          title: Message
          type: string
        data:
          title: Data
          type: object
        status:
          $ref: '#/components/schemas/LogStatusAttr'
        date:
          title: Date
          type: string
          format: date
        time:
          title: Time
          type: string
          format: time
        module:
          $ref: '#/components/schemas/LogModule'
        entity:
          $ref: '#/components/schemas/LogEntity'
        action:
          $ref: '#/components/schemas/LogAction'
        user:
          $ref: '#/components/schemas/app__schemas__user__UserFullNameInDb'
    LogAction:
      title: LogAction
      required:
        - id
        - name
      type: object
      properties:
        id:
          title: Id
          type: integer
        name:
          title: Name
          type: string
    LogEntity:
      title: LogEntity
      required:
        - id
        - name
      type: object
      properties:
        id:
          title: Id
          type: integer
        name:
          title: Name
          type: string
    LogModule:
      title: LogModule
      required:
        - id
        - name
      type: object
      properties:
        id:
          title: Id
          type: integer
        name:
          title: Name
          type: string
    LogStatusAttr:
      title: LogStatusAttr
      enum:
        - SUCCESS
        - WARNING
        - ERROR
      type: string
      description: Список констант статусов для 'Log'
    MainLessonCollision:
      title: MainLessonCollision
      required:
        - field
        - data
      type: object
      properties:
        field:
          title: Field
          type: string
        data:
          $ref: '#/components/schemas/MainLessonCollisionInfo'
    MainLessonCollisionInfo:
      title: MainLessonCollisionInfo
      required:
        - number
        - is_remotely
        - is_elective
        - type
        - id
        - weekday
      type: object
      properties:
        number:
          title: Number
          type: integer
        is_remotely:
          title: Is Remotely
          type: boolean
        is_elective:
          title: Is Elective
          type: boolean
        type:
          $ref: '#/components/schemas/LessonTypeInDb'
        discipline:
          $ref: '#/components/schemas/DisciplineInDb'
        place:
          $ref: '#/components/schemas/PlaceInDb'
        id:
          title: Id
          type: integer
        weekday:
          title: Weekday
          type: integer
        parity:
          title: Parity
          type: integer
        group_names:
          title: Group Names
          type: array
          items:
            type: string
        teacher_names:
          title: Teacher Names
          type: array
          items:
            type: string
    MainLessonCreate:
      title: MainLessonCreate
      required:
        - number
        - type_id
        - groups
        - semester_faculty_id
        - weekday
      type: object
      properties:
        number:
          title: Number
          maximum: 9
          minimum: 0
          type: integer
        type_id:
          title: Type Id
          maximum: 2147483647
          minimum: 1
          type: integer
        discipline_id:
          title: Discipline Id
          maximum: 2147483647
          minimum: 1
          type: integer
        is_remotely:
          title: Is Remotely
          type: boolean
          default: false
        is_elective:
          title: Is Elective
          type: boolean
          default: false
        groups:
          title: Groups
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
        teachers:
          title: Teachers
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
          default: []
        place_id:
          title: Place Id
          maximum: 2147483647
          minimum: 1
          type: integer
        semester_faculty_id:
          title: Semester Faculty Id
          maximum: 2147483647
          minimum: 1
          type: integer
        weekday:
          title: Weekday
          maximum: 5
          minimum: 0
          type: integer
        parity:
          title: Parity
          maximum: 1
          minimum: 0
          type: integer
        start_date:
          title: Start Date
          type: string
          format: date
        end_date:
          title: End Date
          type: string
          format: date
    MainLessonCreateWithParams:
      title: MainLessonCreateWithParams
      required:
        - lesson
      type: object
      properties:
        ignore_collisions:
          title: Ignore Collisions
          type: boolean
          default: false
        notify:
          title: Notify
          type: boolean
          default: false
        lesson:
          $ref: '#/components/schemas/MainLessonCreate'
    MainLessonExport:
      title: MainLessonExport
      required:
        - faculty_id
      type: object
      properties:
        faculty_id:
          title: Faculty Id
          maximum: 2147483647
          minimum: 1
          type: integer
        semester_faculty_id:
          title: Semester Faculty Id
          maximum: 2147483647
          minimum: 1
          type: integer
        directions:
          title: Directions
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
        profiles:
          title: Profiles
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
        courses:
          title: Courses
          maximum: 6
          minimum: 1
          type: array
          items:
            maximum: 6
            minimum: 1
            type: integer
        groups:
          title: Groups
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
        extra:
          title: Extra
          $ref: '#/components/schemas/ExportExtraInfo'
          default:
            vice_rector_name: Фамилия И.О.
            head_of_umu_name: Фамилия И.О.
            dean_name: Фамилия И.О.
    MainLessonFullWithRelated:
      title: MainLessonFullWithRelated
      required:
        - number
        - is_remotely
        - is_elective
        - type
        - id
        - weekday
      type: object
      properties:
        number:
          title: Number
          type: integer
        is_remotely:
          title: Is Remotely
          type: boolean
        is_elective:
          title: Is Elective
          type: boolean
        type:
          $ref: '#/components/schemas/LessonTypeInDb'
        discipline:
          $ref: '#/components/schemas/DisciplineInDb'
        place:
          $ref: '#/components/schemas/PlaceInDb'
        id:
          title: Id
          type: integer
        weekday:
          title: Weekday
          type: integer
        parity:
          title: Parity
          type: integer
        start_date:
          title: Start Date
          type: string
          format: date
        end_date:
          title: End Date
          type: string
          format: date
        groups:
          title: Groups
          type: array
          items:
            type: integer
        teachers:
          title: Teachers
          type: array
          items:
            type: integer
        related_lessons:
          title: Related Lessons
          type: array
          items:
            $ref: '#/components/schemas/LessonRelated'
          default: []
    MainLessonHistory:
      title: MainLessonHistory
      required:
        - id
        - user
        - changes
        - timestamp
      type: object
      properties:
        id:
          title: Id
          type: integer
        user:
          $ref: '#/components/schemas/app__schemas__user__UserFullNameInDb'
        changes:
          title: Changes
          type: array
          items:
            $ref: '#/components/schemas/MainLessonHistoryField'
        timestamp:
          title: Timestamp
          type: string
          format: date-time
    MainLessonHistoryField:
      title: MainLessonHistoryField
      required:
        - field
      type: object
      properties:
        field:
          $ref: '#/components/schemas/HistoryField'
        new_value:
          title: New Value
          type: string
        old_value:
          title: Old Value
          type: string
    MainLessonInfo:
      title: MainLessonInfo
      required:
        - number
        - is_remotely
        - is_elective
        - type_id
        - id
        - weekday
      type: object
      properties:
        number:
          title: Number
          type: integer
        is_remotely:
          title: Is Remotely
          type: boolean
        is_elective:
          title: Is Elective
          type: boolean
        type_id:
          title: Type Id
          type: integer
        discipline_id:
          title: Discipline Id
          type: integer
        place_id:
          title: Place Id
          type: integer
        id:
          title: Id
          type: integer
        weekday:
          title: Weekday
          type: integer
        parity:
          title: Parity
          type: integer
        start_date:
          title: Start Date
          type: string
          format: date
        end_date:
          title: End Date
          type: string
          format: date
        groups:
          title: Groups
          type: array
          items:
            type: integer
        teachers:
          title: Teachers
          type: array
          items:
            type: integer
    MainLessonResults:
      title: MainLessonResults
      required:
        - header_ids
        - lessons
      type: object
      properties:
        header_ids:
          title: Header Ids
          type: array
          items:
            type: integer
        lessons:
          title: Lessons
          type: array
          items:
            $ref: '#/components/schemas/MainLessonInfo'
        last_change:
          $ref: '#/components/schemas/LastChange'
        mode:
          $ref: '#/components/schemas/ViewMode'
    MainLessonUpdate:
      title: MainLessonUpdate
      type: object
      properties:
        discipline_id:
          title: Discipline Id
          maximum: 2147483647
          minimum: 1
          type: integer
        number:
          title: Number
          maximum: 9
          minimum: 0
          type: integer
        type_id:
          title: Type Id
          maximum: 2147483647
          minimum: 1
          type: integer
        is_remotely:
          title: Is Remotely
          type: boolean
          default: false
        is_elective:
          title: Is Elective
          type: boolean
          default: false
        groups:
          title: Groups
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
        teachers:
          title: Teachers
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
          default: []
        place_id:
          title: Place Id
          maximum: 2147483647
          minimum: 1
          type: integer
        weekday:
          title: Weekday
          maximum: 5
          minimum: 0
          type: integer
        parity:
          title: Parity
          maximum: 1
          minimum: 0
          type: integer
        start_date:
          title: Start Date
          type: string
          format: date
        end_date:
          title: End Date
          type: string
          format: date
    MainLessonUpdateWithParams:
      title: MainLessonUpdateWithParams
      required:
        - lesson
      type: object
      properties:
        ignore_collisions:
          title: Ignore Collisions
          type: boolean
          default: false
        notify:
          title: Notify
          type: boolean
          default: false
        lesson:
          $ref: '#/components/schemas/MainLessonUpdate'
    MainLessonWithRelated:
      title: MainLessonWithRelated
      required:
        - number
        - is_remotely
        - is_elective
        - type_id
        - id
        - weekday
      type: object
      properties:
        number:
          title: Number
          type: integer
        is_remotely:
          title: Is Remotely
          type: boolean
        is_elective:
          title: Is Elective
          type: boolean
        type_id:
          title: Type Id
          type: integer
        discipline_id:
          title: Discipline Id
          type: integer
        place_id:
          title: Place Id
          type: integer
        id:
          title: Id
          type: integer
        weekday:
          title: Weekday
          type: integer
        parity:
          title: Parity
          type: integer
        start_date:
          title: Start Date
          type: string
          format: date
        end_date:
          title: End Date
          type: string
          format: date
        groups:
          title: Groups
          type: array
          items:
            type: integer
        teachers:
          title: Teachers
          type: array
          items:
            type: integer
        related_lessons:
          title: Related Lessons
          type: array
          items:
            $ref: '#/components/schemas/LessonRelated'
          default: []
    Page_Log_:
      title: Page[Log]
      required:
        - items
        - total
        - page
        - size
      type: object
      properties:
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/Log'
        total:
          title: Total
          minimum: 0
          type: integer
        page:
          title: Page
          minimum: 1
          type: integer
        size:
          title: Size
          minimum: 1
          type: integer
    Page_StudentShortInDb_:
      title: Page[StudentShortInDb]
      required:
        - items
        - total
        - page
        - size
      type: object
      properties:
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/StudentShortInDb'
        total:
          title: Total
          minimum: 0
          type: integer
        page:
          title: Page
          minimum: 1
          type: integer
        size:
          title: Size
          minimum: 1
          type: integer
    Page_UserFullInDb_:
      title: Page[UserFullInDb]
      required:
        - items
        - total
        - page
        - size
      type: object
      properties:
        items:
          title: Items
          type: array
          items:
            $ref: '#/components/schemas/UserFullInDb'
        total:
          title: Total
          minimum: 0
          type: integer
        page:
          title: Page
          minimum: 1
          type: integer
        size:
          title: Size
          minimum: 1
          type: integer
    Permissions:
      title: Permissions
      enum:
        - faculty_create
        - faculty_read
        - faculty_update
        - faculty_delete
        - faculty_import
        - faculty_export
        - group_create
        - group_read
        - group_update
        - group_delete
        - group_import
        - group_export
        - direction_create
        - direction_read
        - direction_update
        - direction_delete
        - direction_import
        - direction_export
        - profile_create
        - profile_read
        - profile_update
        - profile_delete
        - profile_import
        - profile_export
        - equipment_create
        - equipment_read
        - equipment_update
        - equipment_delete
        - equipment_import
        - equipment_export
        - place_create
        - place_read
        - place_update
        - place_delete
        - place_import
        - place_export
        - discipline_create
        - discipline_read
        - discipline_update
        - discipline_delete
        - discipline_import
        - discipline_export
        - bell_create
        - bell_read
        - bell_update
        - bell_delete
        - bell_import
        - bell_export
        - lesson_create
        - lesson_read
        - lesson_history_read
        - lesson_update
        - lesson_set_status
        - lesson_set_theme
        - lesson_delete
        - lesson_import
        - lesson_export
        - teacher_create
        - teacher_read
        - teacher_update
        - teacher_delete
        - teacher_import
        - teacher_export
        - student_create
        - student_read
        - student_update
        - student_delete
        - student_import
        - student_export
        - semester_create
        - semester_read
        - semester_update
        - semester_delete
        - semester_import
        - semester_export
        - semester_faculty_create
        - semester_faculty_read
        - semester_faculty_update
        - semester_faculty_delete
        - semester_lessons_direction_create
        - semester_lessons_direction_read
        - semester_lessons_direction_update
        - semester_lessons_direction_delete
        - semester_lessons_direction_import
        - semester_session_direction_create
        - semester_session_direction_read
        - semester_session_direction_update
        - semester_session_direction_delete
        - semester_session_direction_import
        - session_event_create
        - session_event_read
        - session_event_update
        - session_event_delete
        - session_event_import
        - session_event_export
        - user_create
        - user_read
        - user_update
        - user_set_password
        - user_delete
        - user_permission_create
        - user_permission_read
        - user_permission_update
        - user_permission_delete
        - role_create
        - role_read
        - role_update
        - role_delete
        - role_import
        - role_export
        - permission_create
        - permission_read
        - permission_update
        - permission_delete
        - journal_create
        - journal_update
        - journal_read
        - journal_delete
        - journal_import
        - journal_export
        - production_calendar_create
        - production_calendar_read
        - production_calendar_update
        - production_calendar_delete
        - production_calendar_import
        - production_calendar_export
        - setting_read
        - setting_update
        - timetable_mode_update
        - timetable_draft_read
        - timetable_closed_read
        - statistic_read
        - log_read
        - log_export
        - bot_broadcast
      type: string
      description: Список констант для `RolePermission.permission_name`
    PersonCreate:
      title: PersonCreate
      required:
        - first_name
        - last_name
      type: object
      properties:
        middle_name:
          title: Middle Name
          maxLength: 40
          type: string
        gender:
          title: Gender
          type: boolean
        birthday:
          title: Birthday
          type: string
          format: date
        first_name:
          title: First Name
          maxLength: 40
          type: string
        last_name:
          title: Last Name
          maxLength: 40
          type: string
    PersonFullName:
      title: PersonFullName
      required:
        - full_name
      type: object
      properties:
        full_name:
          title: Full Name
          type: string
    PersonInDb:
      title: PersonInDb
      required:
        - full_name
        - first_name
        - last_name
        - type
        - id
      type: object
      properties:
        full_name:
          title: Full Name
          type: string
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        middle_name:
          title: Middle Name
          type: string
        type:
          $ref: '#/components/schemas/PersonType'
        gender:
          title: Gender
          type: boolean
        birthday:
          title: Birthday
          type: string
          format: date
        id:
          title: Id
          type: integer
    PersonShortInDb:
      title: PersonShortInDb
      required:
        - first_name
        - last_name
        - id
      type: object
      properties:
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        middle_name:
          title: Middle Name
          type: string
        id:
          title: Id
          type: integer
    PersonType:
      title: PersonType
      enum:
        - 1
        - 2
        - 3
      type: integer
      description: Список констант для 'Person.type'
    PersonUpdate:
      title: PersonUpdate
      type: object
      properties:
        middle_name:
          title: Middle Name
          maxLength: 40
          type: string
        gender:
          title: Gender
          type: boolean
        birthday:
          title: Birthday
          type: string
          format: date
        first_name:
          title: First Name
          maxLength: 40
          type: string
        last_name:
          title: Last Name
          maxLength: 40
          type: string
    PlaceCreate:
      title: PlaceCreate
      required:
        - address
        - name
      type: object
      properties:
        address:
          title: Address
          maxLength: 35
          type: string
        name:
          title: Name
          maxLength: 20
          type: string
        size:
          title: Size
          minimum: 1
          type: integer
        faculty_id:
          title: Faculty Id
          maximum: 2147483647
          minimum: 1
          type: integer
        equipments:
          title: Equipments
          type: array
          items:
            $ref: '#/components/schemas/PlaceEquipmentShortInfo'
          default: []
    PlaceEquipmentInfo:
      title: PlaceEquipmentInfo
      required:
        - equipment
      type: object
      properties:
        equipment:
          $ref: '#/components/schemas/EquipmentInDb'
        amount:
          title: Amount
          type: integer
    PlaceEquipmentShortInfo:
      title: PlaceEquipmentShortInfo
      required:
        - equipment_id
      type: object
      properties:
        equipment_id:
          title: Equipment Id
          maximum: 2147483647
          minimum: 1
          type: integer
        amount:
          title: Amount
          maximum: 100
          minimum: 1
          type: integer
    PlaceExport:
      title: PlaceExport
      type: object
      properties:
        faculty_id:
          title: Faculty Id
          maximum: 2147483647
          minimum: 1
          type: integer
    PlaceInDb:
      title: PlaceInDb
      required:
        - address
        - name
        - id
      type: object
      properties:
        address:
          title: Address
          type: string
        name:
          title: Name
          type: string
        faculty_id:
          title: Faculty Id
          type: integer
        size:
          title: Size
          type: integer
        place_equipments:
          title: Place Equipments
          type: array
          items:
            $ref: '#/components/schemas/PlaceEquipmentInfo'
        id:
          title: Id
          type: integer
    PlaceNameInDb:
      title: PlaceNameInDb
      required:
        - id
        - name
      type: object
      properties:
        id:
          title: Id
          type: integer
        name:
          title: Name
          type: string
    PlaceShortInDb:
      title: PlaceShortInDb
      required:
        - address
        - name
        - id
      type: object
      properties:
        address:
          title: Address
          type: string
        name:
          title: Name
          type: string
        faculty_id:
          title: Faculty Id
          type: integer
        size:
          title: Size
          type: integer
        id:
          title: Id
          type: integer
        equipments:
          title: Equipments
          type: array
          items:
            $ref: '#/components/schemas/PlaceEquipmentShortInfo'
          default: []
    PlaceUpdate:
      title: PlaceUpdate
      required:
        - address
        - name
      type: object
      properties:
        address:
          title: Address
          maxLength: 35
          type: string
        name:
          title: Name
          maxLength: 20
          type: string
        size:
          title: Size
          minimum: 1
          type: integer
        faculty_id:
          title: Faculty Id
          maximum: 2147483647
          minimum: 1
          type: integer
        equipments:
          title: Equipments
          type: array
          items:
            $ref: '#/components/schemas/PlaceEquipmentShortInfo'
          default: []
    ProductionCalendarDayCreate:
      title: ProductionCalendarDayCreate
      required:
        - date
        - is_holiday
      type: object
      properties:
        date:
          title: Date
          type: string
        is_holiday:
          title: Is Holiday
          type: boolean
    ProductionCalendarDayInDb:
      title: ProductionCalendarDayInDb
      required:
        - date
        - is_holiday
        - id
      type: object
      properties:
        date:
          title: Date
          type: string
          format: date
        is_holiday:
          title: Is Holiday
          type: boolean
        id:
          title: Id
          type: integer
    ProductionCalendarDayUpdate:
      title: ProductionCalendarDayUpdate
      required:
        - is_holiday
      type: object
      properties:
        is_holiday:
          title: Is Holiday
          type: boolean
    ProfileCreate:
      title: ProfileCreate
      required:
        - name
        - direction_id
      type: object
      properties:
        name:
          title: Name
          maxLength: 100
          type: string
        short_name:
          title: Short Name
          maxLength: 50
          type: string
        direction_id:
          title: Direction Id
          maximum: 2147483647
          minimum: 1
          type: integer
    ProfileInDb:
      title: ProfileInDb
      required:
        - name
        - direction_id
        - id
      type: object
      properties:
        name:
          title: Name
          type: string
        short_name:
          title: Short Name
          type: string
        direction_id:
          title: Direction Id
          type: integer
        id:
          title: Id
          type: integer
    ProfileUpdate:
      title: ProfileUpdate
      required:
        - name
        - direction_id
      type: object
      properties:
        name:
          title: Name
          maxLength: 100
          type: string
        short_name:
          title: Short Name
          maxLength: 50
          type: string
        direction_id:
          title: Direction Id
          maximum: 2147483647
          minimum: 1
          type: integer
    RoleCreate:
      title: RoleCreate
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          maxLength: 30
          type: string
        permission_names:
          type: array
          items:
            $ref: '#/components/schemas/Permissions'
    RoleInDb:
      title: RoleInDb
      required:
        - name
        - id
      type: object
      properties:
        name:
          title: Name
          type: string
        id:
          title: Id
          type: integer
    RolePermissionsInDb:
      title: RolePermissionsInDb
      required:
        - name
        - id
        - permissions_names
      type: object
      properties:
        name:
          title: Name
          type: string
        id:
          title: Id
          type: integer
        permissions_names:
          type: array
          items:
            $ref: '#/components/schemas/Permissions'
    RoleUpdate:
      title: RoleUpdate
      required:
        - name
      type: object
      properties:
        name:
          title: Name
          maxLength: 30
          type: string
        permission_names:
          type: array
          items:
            $ref: '#/components/schemas/Permissions'
    SemesterCreate:
      title: SemesterCreate
      required:
        - type
        - study_year
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SemesterType'
        study_year:
          title: Study Year
          type: string
    SemesterFacultyCreate:
      title: SemesterFacultyCreate
      required:
        - semester_id
        - faculty_id
      type: object
      properties:
        semester_id:
          title: Semester Id
          type: integer
        faculty_id:
          title: Faculty Id
          type: integer
        part:
          title: Part
          maximum: 4
          minimum: 1
          type: integer
        week:
          $ref: '#/components/schemas/SemesterFacultyWeekCreate'
    SemesterFacultyInDb:
      title: SemesterFacultyInDb
      required:
        - id
        - semester_id
        - faculty_id
        - is_current
      type: object
      properties:
        id:
          title: Id
          type: integer
        start_date:
          title: Start Date
          type: string
          format: date
        end_date:
          title: End Date
          type: string
          format: date
        part:
          title: Part
          type: integer
        semester_id:
          title: Semester Id
          type: integer
        faculty_id:
          title: Faculty Id
          type: integer
        is_current:
          title: Is Current
          type: boolean
        mode:
          $ref: '#/components/schemas/ViewMode'
        week:
          $ref: '#/components/schemas/SemesterFacultyWeek'
    SemesterFacultyUpdate:
      title: SemesterFacultyUpdate
      type: object
      properties:
        type:
          $ref: '#/components/schemas/WeekType'
        revert:
          title: Revert
          type: boolean
        change_week_on_start_day:
          title: Change Week On Start Day
          type: boolean
        mode:
          $ref: '#/components/schemas/ViewMode'
    SemesterFacultyWeek:
      title: SemesterFacultyWeek
      type: object
      properties:
        type:
          $ref: '#/components/schemas/WeekType'
        revert:
          title: Revert
          type: boolean
        change_week_on_start_day:
          title: Change Week On Start Day
          type: boolean
    SemesterFacultyWeekCreate:
      title: SemesterFacultyWeekCreate
      type: object
      properties:
        type:
          $ref: '#/components/schemas/WeekType'
        revert:
          title: Revert
          type: boolean
        change_week_on_start_day:
          title: Change Week On Start Day
          type: boolean
    SemesterInDb:
      title: SemesterInDb
      required:
        - id
        - type
        - study_year
        - is_current_lessons
        - is_current_session
      type: object
      properties:
        id:
          title: Id
          type: integer
        type:
          $ref: '#/components/schemas/SemesterType'
        study_year:
          title: Study Year
          type: string
        is_current_lessons:
          title: Is Current Lessons
          type: boolean
        is_current_session:
          title: Is Current Session
          type: boolean
    SemesterLessonsDirectionCreate:
      title: SemesterLessonsDirectionCreate
      required:
        - direction_id
        - course
        - start_date
        - end_date
        - semester_faculty_id
      type: object
      properties:
        direction_id:
          title: Direction Id
          maximum: 2147483647
          minimum: 1
          type: integer
        course:
          title: Course
          maximum: 6
          minimum: 1
          type: integer
        group_id:
          title: Group Id
          maximum: 2147483647
          minimum: 1
          type: integer
        start_date:
          title: Start Date
          type: string
        end_date:
          title: End Date
          type: string
        semester_faculty_id:
          title: Semester Faculty Id
          maximum: 2147483647
          minimum: 1
          type: integer
    SemesterLessonsDirectionInDb:
      title: SemesterLessonsDirectionInDb
      required:
        - id
        - semester_faculty_id
        - direction_id
        - course
        - start_date
        - end_date
      type: object
      properties:
        id:
          title: Id
          type: integer
        semester_faculty_id:
          title: Semester Faculty Id
          type: integer
        direction_id:
          title: Direction Id
          type: integer
        course:
          title: Course
          type: integer
        group_id:
          title: Group Id
          type: integer
        start_date:
          title: Start Date
          type: string
          format: date
        end_date:
          title: End Date
          type: string
          format: date
    SemesterLessonsDirectionUpdate:
      title: SemesterLessonsDirectionUpdate
      required:
        - direction_id
        - course
        - start_date
        - end_date
      type: object
      properties:
        direction_id:
          title: Direction Id
          maximum: 2147483647
          minimum: 1
          type: integer
        course:
          title: Course
          maximum: 6
          minimum: 1
          type: integer
        group_id:
          title: Group Id
          maximum: 2147483647
          minimum: 1
          type: integer
        start_date:
          title: Start Date
          type: string
        end_date:
          title: End Date
          type: string
    SemesterSessionDirectionCreate:
      title: SemesterSessionDirectionCreate
      required:
        - semester_id
        - direction_id
        - course
        - start_date
        - end_date
      type: object
      properties:
        semester_id:
          title: Semester Id
          maximum: 2147483647
          minimum: 1
          type: integer
        direction_id:
          title: Direction Id
          maximum: 2147483647
          minimum: 1
          type: integer
        group_id:
          title: Group Id
          maximum: 2147483647
          minimum: 1
          type: integer
        course:
          title: Course
          maximum: 6
          minimum: 1
          type: integer
        start_date:
          title: Start Date
          type: string
        end_date:
          title: End Date
          type: string
    SemesterSessionDirectionInDb:
      title: SemesterSessionDirectionInDb
      required:
        - id
        - semester_id
        - direction_id
        - course
        - start_date
        - end_date
      type: object
      properties:
        id:
          title: Id
          type: integer
        semester_id:
          title: Semester Id
          type: integer
        direction_id:
          title: Direction Id
          type: integer
        group_id:
          title: Group Id
          type: integer
        course:
          title: Course
          type: integer
        start_date:
          title: Start Date
          type: string
          format: date
        end_date:
          title: End Date
          type: string
          format: date
    SemesterSessionDirectionUpdate:
      title: SemesterSessionDirectionUpdate
      required:
        - semester_id
        - direction_id
        - course
      type: object
      properties:
        semester_id:
          title: Semester Id
          maximum: 2147483647
          minimum: 1
          type: integer
        direction_id:
          title: Direction Id
          maximum: 2147483647
          minimum: 1
          type: integer
        group_id:
          title: Group Id
          maximum: 2147483647
          minimum: 1
          type: integer
        course:
          title: Course
          maximum: 6
          minimum: 1
          type: integer
        start_date:
          title: Start Date
          type: string
        end_date:
          title: End Date
          type: string
    SemesterType:
      title: SemesterType
      enum:
        - Осенний
        - Весенний
      type: string
      description: Список констант для `Semester.type`
    SemesterUpdate:
      title: SemesterUpdate
      required:
        - type
        - study_year
      type: object
      properties:
        type:
          $ref: '#/components/schemas/SemesterType'
        study_year:
          title: Study Year
          type: string
    SessionEventCollision:
      title: SessionEventCollision
      required:
        - field
        - data
      type: object
      properties:
        field:
          title: Field
          type: string
        data:
          $ref: '#/components/schemas/SessionEventCollisionInfo'
    SessionEventCollisionInfo:
      title: SessionEventCollisionInfo
      required:
        - event_type_id
        - date
        - time
        - is_remotely
        - discipline
        - semester_id
        - created_user_id
        - id
      type: object
      properties:
        event_type_id:
          $ref: '#/components/schemas/SessionEventType'
        date:
          title: Date
          type: string
          format: date
        time:
          title: Time
          anyOf:
            - type: string
              format: time
            - type: string
        is_remotely:
          title: Is Remotely
          type: boolean
        discipline:
          $ref: '#/components/schemas/DisciplineInDb'
        place:
          $ref: '#/components/schemas/PlaceInDb'
        semester_id:
          title: Semester Id
          type: integer
        created_user_id:
          title: Created User Id
          type: integer
        id:
          title: Id
          type: integer
        group_names:
          title: Group Names
          type: array
          items:
            type: string
        teacher_names:
          title: Teacher Names
          type: array
          items:
            type: string
    SessionEventCreate:
      title: SessionEventCreate
      required:
        - event_type_id
        - date
        - time
        - discipline_id
        - groups
        - teachers
        - semester_id
      type: object
      properties:
        event_type_id:
          $ref: '#/components/schemas/SessionEventType'
        date:
          title: Date
          type: string
        time:
          title: Time
          type: string
        is_remotely:
          title: Is Remotely
          type: boolean
          default: false
        discipline_id:
          title: Discipline Id
          maximum: 2147483647
          minimum: 1
          type: integer
        place_id:
          title: Place Id
          maximum: 2147483647
          minimum: 1
          type: integer
        groups:
          title: Groups
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
        teachers:
          title: Teachers
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
        semester_id:
          title: Semester Id
          maximum: 2147483647
          minimum: 1
          type: integer
    SessionEventCreateWithParams:
      title: SessionEventCreateWithParams
      required:
        - session_event
      type: object
      properties:
        ignore_collisions:
          title: Ignore Collisions
          type: boolean
          default: false
        notify:
          title: Notify
          type: boolean
          default: false
        session_event:
          $ref: '#/components/schemas/SessionEventCreate'
    SessionEventData:
      title: SessionEventData
      required:
        - data
      type: object
      properties:
        data:
          title: Data
          type: array
          items:
            $ref: '#/components/schemas/SessionEventInDb'
        start_date:
          title: Start Date
          type: string
          format: date
        end_date:
          title: End Date
          type: string
          format: date
        mode:
          $ref: '#/components/schemas/ViewMode'
    SessionEventExport:
      title: SessionEventExport
      required:
        - faculty_id
      type: object
      properties:
        faculty_id:
          title: Faculty Id
          maximum: 2147483647
          minimum: 1
          type: integer
        semester_id:
          title: Semester Id
          maximum: 2147483647
          minimum: 1
          type: integer
        directions:
          title: Directions
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
        profiles:
          title: Profiles
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
        courses:
          title: Courses
          maximum: 6
          minimum: 1
          type: array
          items:
            maximum: 6
            minimum: 1
            type: integer
        groups:
          title: Groups
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
        extra:
          title: Extra
          $ref: '#/components/schemas/ExportExtraInfo'
          default:
            vice_rector_name: Фамилия И.О.
            head_of_umu_name: Фамилия И.О.
            dean_name: Фамилия И.О.
    SessionEventInDb:
      title: SessionEventInDb
      required:
        - id
        - event_type_id
        - date
        - time
        - is_remotely
        - discipline_id
        - groups
        - teachers
        - semester_id
        - created_user_id
      type: object
      properties:
        id:
          title: Id
          type: integer
        event_type_id:
          $ref: '#/components/schemas/SessionEventType'
        date:
          title: Date
          anyOf:
            - type: string
              format: date
            - type: string
        time:
          title: Time
          anyOf:
            - type: string
              format: time
            - type: string
        is_remotely:
          title: Is Remotely
          type: boolean
        discipline_id:
          title: Discipline Id
          type: integer
        place_id:
          title: Place Id
          type: integer
        groups:
          title: Groups
          type: array
          items:
            type: integer
        teachers:
          title: Teachers
          type: array
          items:
            type: integer
        semester_id:
          title: Semester Id
          type: integer
        created_user_id:
          title: Created User Id
          type: integer
    SessionEventType:
      title: SessionEventType
      enum:
        - 1
        - 2
      type: integer
      description: Список констант для `SessionSchedule`
    SessionEventUpdate:
      title: SessionEventUpdate
      required:
        - groups
        - teachers
      type: object
      properties:
        event_type_id:
          $ref: '#/components/schemas/SessionEventType'
        date:
          title: Date
          type: string
        time:
          title: Time
          type: string
        is_remotely:
          title: Is Remotely
          type: boolean
        discipline_id:
          title: Discipline Id
          maximum: 2147483647
          minimum: 1
          type: integer
        place_id:
          title: Place Id
          maximum: 2147483647
          minimum: 1
          type: integer
        groups:
          title: Groups
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
        teachers:
          title: Teachers
          maximum: 2147483647
          minimum: 1
          type: array
          items:
            maximum: 2147483647
            minimum: 1
            type: integer
    SessionEventUpdateWithParams:
      title: SessionEventUpdateWithParams
      required:
        - session_event
      type: object
      properties:
        ignore_collisions:
          title: Ignore Collisions
          type: boolean
          default: false
        notify:
          title: Notify
          type: boolean
          default: false
        session_event:
          $ref: '#/components/schemas/SessionEventUpdate'
    SessionSettingsUpdate:
      title: SessionSettingsUpdate
      type: object
      properties:
        session_event_before_days:
          title: Session Event Before Days
          type: integer
        session_event_before_days_time:
          title: Session Event Before Days Time
          type: string
        session_event_tomorrow_time:
          title: Session Event Tomorrow Time
          type: string
    SessionViewInDb:
      title: SessionViewInDb
      required:
        - faculty_id
        - semester_id
        - mode
      type: object
      properties:
        faculty_id:
          title: Faculty Id
          type: integer
        semester_id:
          title: Semester Id
          type: integer
        mode:
          $ref: '#/components/schemas/ViewMode'
    SessionViewUpdate:
      title: SessionViewUpdate
      required:
        - faculty_id
        - semester_id
        - mode
      type: object
      properties:
        faculty_id:
          title: Faculty Id
          maximum: 2147483647
          minimum: 1
          type: integer
        semester_id:
          title: Semester Id
          maximum: 2147483647
          minimum: 1
          type: integer
        mode:
          $ref: '#/components/schemas/ViewMode'
        is_notify:
          title: Is Notify
          type: boolean
          default: false
    SortOrder:
      title: SortOrder
      enum:
        - asc
        - desc
      type: string
      description: An enumeration.
    Statistic:
      title: Statistic
      type: object
      properties:
        last_activity_bot:
          title: Last Activity Bot
          type: string
          format: date-time
        last_activity_web:
          title: Last Activity Web
          type: string
          format: date-time
    Status:
      title: Status
      required:
        - status
      type: object
      properties:
        status:
          title: Status
          type: string
    StudentCreate:
      title: StudentCreate
      required:
        - group_id
        - person
      type: object
      properties:
        group_id:
          title: Group Id
          maximum: 2147483647
          minimum: 1
          type: integer
        is_main:
          title: Is Main
          type: boolean
          default: false
        is_deputy_main:
          title: Is Deputy Main
          type: boolean
          default: false
        user:
          $ref: '#/components/schemas/UserBaseCreate'
        person:
          $ref: '#/components/schemas/PersonCreate'
    StudentInDb:
      title: StudentInDb
      required:
        - full_name
        - first_name
        - last_name
        - type
        - id
        - group
        - is_main
        - is_deputy_main
      type: object
      properties:
        full_name:
          title: Full Name
          type: string
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        middle_name:
          title: Middle Name
          type: string
        type:
          $ref: '#/components/schemas/PersonType'
        gender:
          title: Gender
          type: boolean
        birthday:
          title: Birthday
          type: string
          format: date
        id:
          title: Id
          type: integer
        group:
          $ref: '#/components/schemas/GroupFullInDb'
        is_main:
          title: Is Main
          type: boolean
        is_deputy_main:
          title: Is Deputy Main
          type: boolean
    StudentShortInDb:
      title: StudentShortInDb
      required:
        - full_name
        - first_name
        - last_name
        - type
        - group_id
        - id
      type: object
      properties:
        full_name:
          title: Full Name
          type: string
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        middle_name:
          title: Middle Name
          type: string
        type:
          $ref: '#/components/schemas/PersonType'
        gender:
          title: Gender
          type: boolean
        birthday:
          title: Birthday
          type: string
          format: date
        group_id:
          title: Group Id
          maximum: 2147483647
          minimum: 1
          type: integer
        is_main:
          title: Is Main
          type: boolean
          default: false
        is_deputy_main:
          title: Is Deputy Main
          type: boolean
          default: false
        id:
          title: Id
          type: integer
    StudentSortBy:
      title: StudentSortBy
      enum:
        - group
        - first_name
        - last_name
        - middle_name
        - birthday
        - gender
      type: string
      description: An enumeration.
    StudentUpdate:
      title: StudentUpdate
      required:
        - group_id
        - person
      type: object
      properties:
        group_id:
          title: Group Id
          maximum: 2147483647
          minimum: 1
          type: integer
        is_main:
          title: Is Main
          type: boolean
          default: false
        is_deputy_main:
          title: Is Deputy Main
          type: boolean
          default: false
        person:
          $ref: '#/components/schemas/PersonUpdate'
    TeacherAcademicDegreeInDb:
      title: TeacherAcademicDegreeInDb
      required:
        - name
        - short_name
        - id
      type: object
      properties:
        name:
          title: Name
          type: string
        short_name:
          title: Short Name
          type: string
        id:
          title: Id
          type: integer
    TeacherAcademicTitle:
      title: TeacherAcademicTitle
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
      type: integer
      description: Список констант для 'Teacher.academic_title'
    TeacherCreate:
      title: TeacherCreate
      required:
        - person
      type: object
      properties:
        academic_title:
          $ref: '#/components/schemas/TeacherAcademicTitle'
        academic_degree_id:
          title: Academic Degree Id
          maximum: 2147483647
          minimum: 1
          type: integer
        user:
          $ref: '#/components/schemas/UserBaseCreate'
        person:
          $ref: '#/components/schemas/PersonCreate'
    TeacherFullInDb:
      title: TeacherFullInDb
      required:
        - full_name
        - first_name
        - last_name
        - type
        - id
      type: object
      properties:
        full_name:
          title: Full Name
          type: string
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        middle_name:
          title: Middle Name
          type: string
        type:
          $ref: '#/components/schemas/PersonType'
        gender:
          title: Gender
          type: boolean
        birthday:
          title: Birthday
          type: string
          format: date
        academic_title:
          $ref: '#/components/schemas/TeacherAcademicTitle'
        academic_degree:
          $ref: '#/components/schemas/TeacherAcademicDegreeInDb'
        id:
          title: Id
          type: integer
        faculties_ids:
          title: Faculties Ids
          type: array
          items:
            type: integer
    TeacherInDb:
      title: TeacherInDb
      required:
        - full_name
        - first_name
        - last_name
        - type
        - id
      type: object
      properties:
        academic_title:
          $ref: '#/components/schemas/TeacherAcademicTitle'
        academic_degree_id:
          title: Academic Degree Id
          maximum: 2147483647
          minimum: 1
          type: integer
        full_name:
          title: Full Name
          type: string
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        middle_name:
          title: Middle Name
          type: string
        type:
          $ref: '#/components/schemas/PersonType'
        gender:
          title: Gender
          type: boolean
        birthday:
          title: Birthday
          type: string
          format: date
        id:
          title: Id
          type: integer
        faculties_ids:
          title: Faculties Ids
          type: array
          items:
            type: integer
    TeacherShortInDb:
      title: TeacherShortInDb
      required:
        - id
        - name
      type: object
      properties:
        id:
          title: Id
          type: integer
        name:
          title: Name
          type: string
    TeacherUpdate:
      title: TeacherUpdate
      required:
        - person
      type: object
      properties:
        academic_title:
          $ref: '#/components/schemas/TeacherAcademicTitle'
        academic_degree_id:
          title: Academic Degree Id
          maximum: 2147483647
          minimum: 1
          type: integer
        person:
          $ref: '#/components/schemas/PersonUpdate'
    Telegram:
      title: Telegram
      type: object
      properties:
        timetable_today_lessons:
          title: Timetable Today Lessons
          type: string
          format: time
        timetable_tomorrow_lessons:
          title: Timetable Tomorrow Lessons
          type: string
          format: time
        timetable_is_before_lesson:
          title: Timetable Is Before Lesson
          type: string
        session_event_before_days:
          title: Session Event Before Days
          type: integer
        session_event_before_days_time:
          title: Session Event Before Days Time
          type: string
          format: time
        session_event_tomorrow_time:
          title: Session Event Tomorrow Time
          type: string
          format: time
        weather_send_time:
          title: Weather Send Time
          type: string
          format: time
        weather_send_daily:
          title: Weather Send Daily
          type: boolean
        weather_send_lessons:
          title: Weather Send Lessons
          type: boolean
        weather_send_is_weekend:
          title: Weather Send Is Weekend
          type: boolean
        attendance_lecture_time:
          title: Attendance Lecture Time
          type: string
        attendance_practice_time:
          title: Attendance Practice Time
          type: string
        set_theme_time:
          title: Set Theme Time
          type: string
    TelegramId:
      title: TelegramId
      required:
        - telegram_id
      type: object
      properties:
        telegram_id:
          title: Telegram Id
          type: string
    TimetableSettingsUpdate:
      title: TimetableSettingsUpdate
      type: object
      properties:
        timetable_today_lessons:
          title: Timetable Today Lessons
          type: string
        timetable_tomorrow_lessons:
          title: Timetable Tomorrow Lessons
          type: string
        timetable_is_before_lesson:
          title: Timetable Is Before Lesson
          maxLength: 2
          type: string
    TimetableViewInDb:
      title: TimetableViewInDb
      required:
        - semester_faculty_id
        - mode
      type: object
      properties:
        semester_faculty_id:
          title: Semester Faculty Id
          type: integer
        mode:
          $ref: '#/components/schemas/ViewMode'
    TimetableViewUpdate:
      title: TimetableViewUpdate
      required:
        - semester_faculty_id
        - mode
      type: object
      properties:
        semester_faculty_id:
          title: Semester Faculty Id
          maximum: 2147483647
          minimum: 1
          type: integer
        mode:
          $ref: '#/components/schemas/ViewMode'
        is_notify:
          title: Is Notify
          type: boolean
          default: false
    UserBaseCreate:
      title: UserBaseCreate
      required:
        - password
        - confirm_password
        - login
        - role_id
      type: object
      properties:
        password:
          title: Password
          type: string
        confirm_password:
          title: Confirm Password
          type: string
        login:
          title: Login
          maxLength: 25
          type: string
        role_id:
          title: Role Id
          maximum: 2147483647
          minimum: 1
          type: integer
    UserChangePassword:
      title: UserChangePassword
      required:
        - password
        - confirm_password
        - current_password
      type: object
      properties:
        password:
          title: Password
          maxLength: 30
          minLength: 8
          type: string
        confirm_password:
          title: Confirm Password
          type: string
        current_password:
          title: Current Password
          type: string
    UserCreate:
      title: UserCreate
      required:
        - password
        - confirm_password
        - login
        - role_id
        - person
      type: object
      properties:
        password:
          title: Password
          type: string
        confirm_password:
          title: Confirm Password
          type: string
        login:
          title: Login
          maxLength: 25
          type: string
        role_id:
          title: Role Id
          maximum: 2147483647
          minimum: 1
          type: integer
        person:
          $ref: '#/components/schemas/PersonCreate'
    UserCreateFromPerson:
      title: UserCreateFromPerson
      required:
        - password
        - confirm_password
        - login
        - role_id
        - person_id
      type: object
      properties:
        password:
          title: Password
          type: string
        confirm_password:
          title: Confirm Password
          type: string
        login:
          title: Login
          maxLength: 25
          type: string
        role_id:
          title: Role Id
          maximum: 2147483647
          minimum: 1
          type: integer
        person_id:
          title: Person Id
          maximum: 2147483647
          minimum: 1
          type: integer
    UserFacultyForbiddenCreate:
      title: UserFacultyForbiddenCreate
      required:
        - faculty_id
        - user_id
      type: object
      properties:
        faculty_id:
          title: Faculty Id
          type: integer
        user_id:
          title: User Id
          type: integer
    UserFacultyForbiddenInDb:
      title: UserFacultyForbiddenInDb
      required:
        - faculty_id
        - user_id
        - faculty
        - user
      type: object
      properties:
        faculty_id:
          title: Faculty Id
          type: integer
        user_id:
          title: User Id
          type: integer
        faculty:
          $ref: '#/components/schemas/FacultyInDb'
        user:
          $ref: '#/components/schemas/app__schemas__other_permission__UserFullNameInDb'
    UserFacultyForbiddenUpdate:
      title: UserFacultyForbiddenUpdate
      required:
        - users
      type: object
      properties:
        users:
          title: Users
          type: array
          items:
            type: integer
    UserFullInDb:
      title: UserFullInDb
      required:
        - login
        - id
        - person
        - role
      type: object
      properties:
        login:
          title: Login
          type: string
        id:
          title: Id
          type: integer
        person:
          $ref: '#/components/schemas/PersonInDb'
        role:
          $ref: '#/components/schemas/RoleInDb'
        telegram:
          $ref: '#/components/schemas/TelegramId'
    UserFullWithStatisticInDb:
      title: UserFullWithStatisticInDb
      required:
        - login
        - id
        - person
        - role
        - statistic
      type: object
      properties:
        login:
          title: Login
          type: string
        id:
          title: Id
          type: integer
        person:
          $ref: '#/components/schemas/PersonInDb'
        role:
          $ref: '#/components/schemas/RoleInDb'
        statistic:
          $ref: '#/components/schemas/Statistic'
        telegram:
          $ref: '#/components/schemas/TelegramId'
    UserMeInDb:
      title: UserMeInDb
      required:
        - login
        - id
        - is_auth
        - person
        - role
        - other_permissions
        - user_permissions
      type: object
      properties:
        login:
          title: Login
          type: string
        id:
          title: Id
          type: integer
        is_auth:
          title: Is Auth
          type: boolean
        person:
          $ref: '#/components/schemas/PersonInDb'
        role:
          $ref: '#/components/schemas/RolePermissionsInDb'
        other_permissions:
          $ref: '#/components/schemas/FacultyForbidden'
        user_permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permissions'
    UserPassword:
      title: UserPassword
      required:
        - password
        - confirm_password
      type: object
      properties:
        password:
          title: Password
          maxLength: 30
          minLength: 8
          type: string
        confirm_password:
          title: Confirm Password
          type: string
    UserPermissionBase:
      title: UserPermissionBase
      type: object
      properties:
        user_permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permissions'
    UserPermissionCreate:
      title: UserPermissionCreate
      type: object
      properties:
        user_permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permissions'
    UserPermissionUpdate:
      title: UserPermissionUpdate
      type: object
      properties:
        user_permissions:
          type: array
          items:
            $ref: '#/components/schemas/Permissions'
    UserShortTelegram:
      title: UserShortTelegram
      required:
        - person
      type: object
      properties:
        person:
          $ref: '#/components/schemas/PersonShortInDb'
        telegram:
          $ref: '#/components/schemas/TelegramId'
    UserSortBy:
      title: UserSortBy
      enum:
        - login
        - role
        - first_name
        - last_name
        - middle_name
        - birthday
        - gender
      type: string
      description: An enumeration.
    UserUpdate:
      title: UserUpdate
      required:
        - person
      type: object
      properties:
        telegram_id:
          title: Telegram Id
          type: string
        login:
          title: Login
          maxLength: 25
          type: string
        role_id:
          title: Role Id
          maximum: 2147483647
          minimum: 1
          type: integer
        person:
          $ref: '#/components/schemas/PersonUpdate'
    UsersSettings:
      title: UsersSettings
      required:
        - auth
      type: object
      properties:
        auth:
          $ref: '#/components/schemas/AuthSettings'
    ValidationError:
      title: ValidationError
      required:
        - loc
        - msg
        - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
    ViewMode:
      title: ViewMode
      enum:
        - 1
        - 2
        - 3
      type: integer
      description: Список констант для `TimetableView.mode` и `SessionView.mode`
    WeatherSettingsUpdate:
      title: WeatherSettingsUpdate
      type: object
      properties:
        weather_send_time:
          title: Weather Send Time
          type: string
        weather_send_daily:
          title: Weather Send Daily
          type: boolean
        weather_send_lessons:
          title: Weather Send Lessons
          type: boolean
        weather_send_is_weekend:
          title: Weather Send Is Weekend
          type: boolean
    WeekType:
      title: WeekType
      enum:
        - 1
        - 2
        - 3
        - 4
      type: integer
      description: Список констант для `SemesterFacultyWeek.type`
    app__schemas__other_permission__UserFullNameInDb:
      title: UserFullNameInDb
      required:
        - id
        - person
      type: object
      properties:
        id:
          title: Id
          type: integer
        person:
          $ref: '#/components/schemas/PersonFullName'
    app__schemas__user__UserFullNameInDb:
      title: UserFullNameInDb
      required:
        - id
        - person
      type: object
      properties:
        id:
          title: Id
          type: integer
        person:
          $ref: '#/components/schemas/PersonFullName'
  securitySchemes:
    OAuth2PasswordBearer:
      type: oauth2
      flows:
        password:
          scopes: {}
          tokenUrl: api/auth/login
    RefreshToken:
      type: apiKey
      in: cookie
      name: refresh_token
